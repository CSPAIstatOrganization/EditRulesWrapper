//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.physicaldataproduct._3_1;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import ddi.dataset._3_1.DataSetType;
import ddi.physicaldataproduct_proprietary._3_1.ProprietaryRecordLayoutType;
import ddi.reusable._3_1.VersionableType;


/**
 * This type structures an abstract element which is used only as the head of a substitution group.
 * 
 * <p>Java class for BaseRecordLayoutType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="BaseRecordLayoutType">
 *   &lt;complexContent>
 *     &lt;extension base="{ddi:reusable:3_1}VersionableType">
 *       &lt;sequence>
 *         &lt;element ref="{ddi:physicaldataproduct:3_1}PhysicalStructureReference"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "BaseRecordLayoutType", propOrder = {
    "physicalStructureReference"
})
@XmlSeeAlso({
    DataSetType.class,
    ddi.physicaldataproduct._3_1.RecordLayoutType.class,
    ddi.physicaldataproduct_ncube_inline._3_1.RecordLayoutType.class,
    ddi.physicaldataproduct_ncube_normal._3_1.RecordLayoutType.class,
    ddi.physicaldataproduct_ncube_tabular._3_1.RecordLayoutType.class,
    ProprietaryRecordLayoutType.class
})
public abstract class BaseRecordLayoutType
    extends VersionableType
{

    @XmlElement(name = "PhysicalStructureReference", required = true)
    protected PhysicalStructureReferenceType physicalStructureReference;

    /**
     * Gets the value of the physicalStructureReference property.
     * 
     * @return
     *     possible object is
     *     {@link PhysicalStructureReferenceType }
     *     
     */
    public PhysicalStructureReferenceType getPhysicalStructureReference() {
        return physicalStructureReference;
    }

    /**
     * Sets the value of the physicalStructureReference property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhysicalStructureReferenceType }
     *     
     */
    public void setPhysicalStructureReference(PhysicalStructureReferenceType value) {
        this.physicalStructureReference = value;
    }

}
