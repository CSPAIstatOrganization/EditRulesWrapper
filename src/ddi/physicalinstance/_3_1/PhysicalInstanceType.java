//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.physicalinstance._3_1;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import ddi.reusable._3_1.CitationType;
import ddi.reusable._3_1.CodeValueType;
import ddi.reusable._3_1.CoverageType;
import ddi.reusable._3_1.MaintainableType;
import ddi.reusable._3_1.NoteType;
import ddi.reusable._3_1.OtherMaterialType;
import ddi.reusable._3_1.ProprietaryInfoType;
import ddi.reusable._3_1.ReferenceType;


/**
 * Includes information about the physical instance of a data product (an actual data file). It completes the documentation contained in the Physical Data Product module, which describes the physical layout and other characteristics of the data that do not change when a file is merged with another related file, or split into subsets.
 * 
 * <p>Java class for PhysicalInstanceType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PhysicalInstanceType">
 *   &lt;complexContent>
 *     &lt;extension base="{ddi:reusable:3_1}MaintainableType">
 *       &lt;sequence>
 *         &lt;element ref="{ddi:reusable:3_1}Citation" minOccurs="0"/>
 *         &lt;element ref="{ddi:physicalinstance:3_1}Fingerprint" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Coverage" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}OtherMaterial" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Note" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:physicalinstance:3_1}RecordLayoutReference" maxOccurs="unbounded"/>
 *         &lt;element ref="{ddi:physicalinstance:3_1}DataFileIdentification" maxOccurs="unbounded"/>
 *         &lt;element ref="{ddi:physicalinstance:3_1}GrossFileStructure" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}ProprietaryInfo" minOccurs="0"/>
 *         &lt;element ref="{ddi:physicalinstance:3_1}Statistics" minOccurs="0"/>
 *         &lt;element ref="{ddi:physicalinstance:3_1}ByteOrder" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PhysicalInstanceType", propOrder = {
    "citation",
    "fingerprint",
    "coverage",
    "otherMaterial",
    "note",
    "recordLayoutReference",
    "dataFileIdentification",
    "grossFileStructure",
    "proprietaryInfo",
    "statistics",
    "byteOrder"
})
public class PhysicalInstanceType
    extends MaintainableType
{

    @XmlElement(name = "Citation", namespace = "ddi:reusable:3_1")
    protected CitationType citation;
    @XmlElement(name = "Fingerprint")
    protected List<FingerprintType> fingerprint;
    @XmlElement(name = "Coverage", namespace = "ddi:reusable:3_1")
    protected CoverageType coverage;
    @XmlElement(name = "OtherMaterial", namespace = "ddi:reusable:3_1")
    protected List<OtherMaterialType> otherMaterial;
    @XmlElement(name = "Note", namespace = "ddi:reusable:3_1")
    protected List<NoteType> note;
    @XmlElement(name = "RecordLayoutReference", required = true)
    protected List<ReferenceType> recordLayoutReference;
    @XmlElement(name = "DataFileIdentification", required = true)
    protected List<DataFileIdentificationType> dataFileIdentification;
    @XmlElement(name = "GrossFileStructure")
    protected GrossFileStructureType grossFileStructure;
    @XmlElement(name = "ProprietaryInfo", namespace = "ddi:reusable:3_1")
    protected ProprietaryInfoType proprietaryInfo;
    @XmlElement(name = "Statistics")
    protected StatisticsType statistics;
    @XmlElement(name = "ByteOrder")
    protected CodeValueType byteOrder;

    /**
     * Includes a citation for the physical instance of a data set.
     * 
     * @return
     *     possible object is
     *     {@link CitationType }
     *     
     */
    public CitationType getCitation() {
        return citation;
    }

    /**
     * Sets the value of the citation property.
     * 
     * @param value
     *     allowed object is
     *     {@link CitationType }
     *     
     */
    public void setCitation(CitationType value) {
        this.citation = value;
    }

    /**
     * Allows for assigning a digital fingerprint to the data file.Gets the value of the fingerprint property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the fingerprint property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFingerprint().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FingerprintType }
     * 
     * 
     */
    public List<FingerprintType> getFingerprint() {
        if (fingerprint == null) {
            fingerprint = new ArrayList<FingerprintType>();
        }
        return this.fingerprint;
    }

    /**
     * Includes information about the topical, spatial, and temporal coverage of the physical instance.
     * 
     * @return
     *     possible object is
     *     {@link CoverageType }
     *     
     */
    public CoverageType getCoverage() {
        return coverage;
    }

    /**
     * Sets the value of the coverage property.
     * 
     * @param value
     *     allowed object is
     *     {@link CoverageType }
     *     
     */
    public void setCoverage(CoverageType value) {
        this.coverage = value;
    }

    /**
     * Provides information about other resources related to the physical instance.Gets the value of the otherMaterial property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the otherMaterial property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOtherMaterial().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OtherMaterialType }
     * 
     * 
     */
    public List<OtherMaterialType> getOtherMaterial() {
        if (otherMaterial == null) {
            otherMaterial = new ArrayList<OtherMaterialType>();
        }
        return this.otherMaterial;
    }

    /**
     * Note regarding the physical instance.Gets the value of the note property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the note property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNote().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NoteType }
     * 
     * 
     */
    public List<NoteType> getNote() {
        if (note == null) {
            note = new ArrayList<NoteType>();
        }
        return this.note;
    }

    /**
     * References the record layout of the data documented in the physical instance.Gets the value of the recordLayoutReference property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the recordLayoutReference property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRecordLayoutReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ReferenceType }
     * 
     * 
     */
    public List<ReferenceType> getRecordLayoutReference() {
        if (recordLayoutReference == null) {
            recordLayoutReference = new ArrayList<ReferenceType>();
        }
        return this.recordLayoutReference;
    }

    /**
     * Identifies the data file documented in the physical instance and provides information about its location.Gets the value of the dataFileIdentification property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dataFileIdentification property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDataFileIdentification().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DataFileIdentificationType }
     * 
     * 
     */
    public List<DataFileIdentificationType> getDataFileIdentification() {
        if (dataFileIdentification == null) {
            dataFileIdentification = new ArrayList<DataFileIdentificationType>();
        }
        return this.dataFileIdentification;
    }

    /**
     * Includes information about the file structure, as well as other characteristics that are specific to the physical instance.
     * 
     * @return
     *     possible object is
     *     {@link GrossFileStructureType }
     *     
     */
    public GrossFileStructureType getGrossFileStructure() {
        return grossFileStructure;
    }

    /**
     * Sets the value of the grossFileStructure property.
     * 
     * @param value
     *     allowed object is
     *     {@link GrossFileStructureType }
     *     
     */
    public void setGrossFileStructure(GrossFileStructureType value) {
        this.grossFileStructure = value;
    }

    /**
     * Contains information proprietary to the software package which produced the data file. This is expressed as a set of name-value pairs. The value may be taken from a controlled vocabulary.
     * 
     * @return
     *     possible object is
     *     {@link ProprietaryInfoType }
     *     
     */
    public ProprietaryInfoType getProprietaryInfo() {
        return proprietaryInfo;
    }

    /**
     * Sets the value of the proprietaryInfo property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProprietaryInfoType }
     *     
     */
    public void setProprietaryInfo(ProprietaryInfoType value) {
        this.proprietaryInfo = value;
    }

    /**
     * Includes variable and category statistics data documented in the physical instance, or a reference to a physical instance where the statistics are described or located in line.
     * 
     * @return
     *     possible object is
     *     {@link StatisticsType }
     *     
     */
    public StatisticsType getStatistics() {
        return statistics;
    }

    /**
     * Sets the value of the statistics property.
     * 
     * @param value
     *     allowed object is
     *     {@link StatisticsType }
     *     
     */
    public void setStatistics(StatisticsType value) {
        this.statistics = value;
    }

    /**
     * Contains a term from a controlled vocabulary indicating the byte ordering.
     * 
     * @return
     *     possible object is
     *     {@link CodeValueType }
     *     
     */
    public CodeValueType getByteOrder() {
        return byteOrder;
    }

    /**
     * Sets the value of the byteOrder property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeValueType }
     *     
     */
    public void setByteOrder(CodeValueType value) {
        this.byteOrder = value;
    }

}
