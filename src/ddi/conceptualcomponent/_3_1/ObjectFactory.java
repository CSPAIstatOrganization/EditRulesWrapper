//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.conceptualcomponent._3_1;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;
import ddi.reusable._3_1.CodeType;
import ddi.reusable._3_1.CodeValueType;
import ddi.reusable._3_1.InternationalStringType;
import ddi.reusable._3_1.NameType;
import ddi.reusable._3_1.ReferenceType;
import ddi.reusable._3_1.SchemeReferenceType;
import ddi.reusable._3_1.StructuredStringType;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ddi.conceptualcomponent._3_1 package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _ConceptName_QNAME = new QName("ddi:conceptualcomponent:3_1", "ConceptName");
    private final static QName _Keyword_QNAME = new QName("ddi:conceptualcomponent:3_1", "Keyword");
    private final static QName _GeographicLocationSchemeName_QNAME = new QName("ddi:conceptualcomponent:3_1", "GeographicLocationSchemeName");
    private final static QName _ConceptSchemeName_QNAME = new QName("ddi:conceptualcomponent:3_1", "ConceptSchemeName");
    private final static QName _Comments_QNAME = new QName("ddi:conceptualcomponent:3_1", "Comments");
    private final static QName _Concept_QNAME = new QName("ddi:conceptualcomponent:3_1", "Concept");
    private final static QName _GeographicLocationScheme_QNAME = new QName("ddi:conceptualcomponent:3_1", "GeographicLocationScheme");
    private final static QName _UniverseName_QNAME = new QName("ddi:conceptualcomponent:3_1", "UniverseName");
    private final static QName _GeographicStructureScheme_QNAME = new QName("ddi:conceptualcomponent:3_1", "GeographicStructureScheme");
    private final static QName _DataElementConceptName_QNAME = new QName("ddi:conceptualcomponent:3_1", "DataElementConceptName");
    private final static QName _ConceptSchemeReference_QNAME = new QName("ddi:conceptualcomponent:3_1", "ConceptSchemeReference");
    private final static QName _DataElementConcept_QNAME = new QName("ddi:conceptualcomponent:3_1", "DataElementConcept");
    private final static QName _DefiningConceptReference_QNAME = new QName("ddi:conceptualcomponent:3_1", "DefiningConceptReference");
    private final static QName _ConceptGroup_QNAME = new QName("ddi:conceptualcomponent:3_1", "ConceptGroup");
    private final static QName _ConceptualComponentModuleName_QNAME = new QName("ddi:conceptualcomponent:3_1", "ConceptualComponentModuleName");
    private final static QName _Abbreviation_QNAME = new QName("ddi:conceptualcomponent:3_1", "Abbreviation");
    private final static QName _ConceptGroupReference_QNAME = new QName("ddi:conceptualcomponent:3_1", "ConceptGroupReference");
    private final static QName _ConceptReference_QNAME = new QName("ddi:conceptualcomponent:3_1", "ConceptReference");
    private final static QName _UniverseScheme_QNAME = new QName("ddi:conceptualcomponent:3_1", "UniverseScheme");
    private final static QName _UniverseSchemeName_QNAME = new QName("ddi:conceptualcomponent:3_1", "UniverseSchemeName");
    private final static QName _SimilarConcept_QNAME = new QName("ddi:conceptualcomponent:3_1", "SimilarConcept");
    private final static QName _Vocabulary_QNAME = new QName("ddi:conceptualcomponent:3_1", "Vocabulary");
    private final static QName _ConceptGroupName_QNAME = new QName("ddi:conceptualcomponent:3_1", "ConceptGroupName");
    private final static QName _CharacteristicReference_QNAME = new QName("ddi:conceptualcomponent:3_1", "CharacteristicReference");
    private final static QName _Title_QNAME = new QName("ddi:conceptualcomponent:3_1", "Title");
    private final static QName _GeographicStructureSchemeReference_QNAME = new QName("ddi:conceptualcomponent:3_1", "GeographicStructureSchemeReference");
    private final static QName _MachineReadable_QNAME = new QName("ddi:conceptualcomponent:3_1", "MachineReadable");
    private final static QName _Universe_QNAME = new QName("ddi:conceptualcomponent:3_1", "Universe");
    private final static QName _HumanReadable_QNAME = new QName("ddi:conceptualcomponent:3_1", "HumanReadable");
    private final static QName _SimilarConceptReference_QNAME = new QName("ddi:conceptualcomponent:3_1", "SimilarConceptReference");
    private final static QName _AdministrativePurpose_QNAME = new QName("ddi:conceptualcomponent:3_1", "AdministrativePurpose");
    private final static QName _ConceptualComponent_QNAME = new QName("ddi:conceptualcomponent:3_1", "ConceptualComponent");
    private final static QName _SubUniverse_QNAME = new QName("ddi:conceptualcomponent:3_1", "SubUniverse");
    private final static QName _UniverseSchemeReference_QNAME = new QName("ddi:conceptualcomponent:3_1", "UniverseSchemeReference");
    private final static QName _GeographicStructureSchemeName_QNAME = new QName("ddi:conceptualcomponent:3_1", "GeographicStructureSchemeName");
    private final static QName _Difference_QNAME = new QName("ddi:conceptualcomponent:3_1", "Difference");
    private final static QName _ConceptScheme_QNAME = new QName("ddi:conceptualcomponent:3_1", "ConceptScheme");
    private final static QName _GeographicLocationSchemeReference_QNAME = new QName("ddi:conceptualcomponent:3_1", "GeographicLocationSchemeReference");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ddi.conceptualcomponent._3_1
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link VocabularyType }
     * 
     */
    public VocabularyType createVocabularyType() {
        return new VocabularyType();
    }

    /**
     * Create an instance of {@link UniverseType }
     * 
     */
    public UniverseType createUniverseType() {
        return new UniverseType();
    }

    /**
     * Create an instance of {@link GeographicStructureSchemeType }
     * 
     */
    public GeographicStructureSchemeType createGeographicStructureSchemeType() {
        return new GeographicStructureSchemeType();
    }

    /**
     * Create an instance of {@link GeographicLocationSchemeType }
     * 
     */
    public GeographicLocationSchemeType createGeographicLocationSchemeType() {
        return new GeographicLocationSchemeType();
    }

    /**
     * Create an instance of {@link ConceptSchemeType }
     * 
     */
    public ConceptSchemeType createConceptSchemeType() {
        return new ConceptSchemeType();
    }

    /**
     * Create an instance of {@link UniverseSchemeType }
     * 
     */
    public UniverseSchemeType createUniverseSchemeType() {
        return new UniverseSchemeType();
    }

    /**
     * Create an instance of {@link ConceptGroupType }
     * 
     */
    public ConceptGroupType createConceptGroupType() {
        return new ConceptGroupType();
    }

    /**
     * Create an instance of {@link DataElementConceptType }
     * 
     */
    public DataElementConceptType createDataElementConceptType() {
        return new DataElementConceptType();
    }

    /**
     * Create an instance of {@link ConceptType }
     * 
     */
    public ConceptType createConceptType() {
        return new ConceptType();
    }

    /**
     * Create an instance of {@link ConceptualComponentType }
     * 
     */
    public ConceptualComponentType createConceptualComponentType() {
        return new ConceptualComponentType();
    }

    /**
     * Create an instance of {@link ConceptReferenceType }
     * 
     */
    public ConceptReferenceType createConceptReferenceType() {
        return new ConceptReferenceType();
    }

    /**
     * Create an instance of {@link SimilarConceptType }
     * 
     */
    public SimilarConceptType createSimilarConceptType() {
        return new SimilarConceptType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "ConceptName")
    public JAXBElement<NameType> createConceptName(NameType value) {
        return new JAXBElement<NameType>(_ConceptName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InternationalStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "Keyword")
    public JAXBElement<InternationalStringType> createKeyword(InternationalStringType value) {
        return new JAXBElement<InternationalStringType>(_Keyword_QNAME, InternationalStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "GeographicLocationSchemeName")
    public JAXBElement<NameType> createGeographicLocationSchemeName(NameType value) {
        return new JAXBElement<NameType>(_GeographicLocationSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "ConceptSchemeName")
    public JAXBElement<NameType> createConceptSchemeName(NameType value) {
        return new JAXBElement<NameType>(_ConceptSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "Comments")
    public JAXBElement<StructuredStringType> createComments(StructuredStringType value) {
        return new JAXBElement<StructuredStringType>(_Comments_QNAME, StructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "Concept")
    public JAXBElement<ConceptType> createConcept(ConceptType value) {
        return new JAXBElement<ConceptType>(_Concept_QNAME, ConceptType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GeographicLocationSchemeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "GeographicLocationScheme")
    public JAXBElement<GeographicLocationSchemeType> createGeographicLocationScheme(GeographicLocationSchemeType value) {
        return new JAXBElement<GeographicLocationSchemeType>(_GeographicLocationScheme_QNAME, GeographicLocationSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "UniverseName")
    public JAXBElement<NameType> createUniverseName(NameType value) {
        return new JAXBElement<NameType>(_UniverseName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GeographicStructureSchemeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "GeographicStructureScheme")
    public JAXBElement<GeographicStructureSchemeType> createGeographicStructureScheme(GeographicStructureSchemeType value) {
        return new JAXBElement<GeographicStructureSchemeType>(_GeographicStructureScheme_QNAME, GeographicStructureSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "DataElementConceptName")
    public JAXBElement<NameType> createDataElementConceptName(NameType value) {
        return new JAXBElement<NameType>(_DataElementConceptName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SchemeReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "ConceptSchemeReference")
    public JAXBElement<SchemeReferenceType> createConceptSchemeReference(SchemeReferenceType value) {
        return new JAXBElement<SchemeReferenceType>(_ConceptSchemeReference_QNAME, SchemeReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataElementConceptType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "DataElementConcept")
    public JAXBElement<DataElementConceptType> createDataElementConcept(DataElementConceptType value) {
        return new JAXBElement<DataElementConceptType>(_DataElementConcept_QNAME, DataElementConceptType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "DefiningConceptReference")
    public JAXBElement<ReferenceType> createDefiningConceptReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_DefiningConceptReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptGroupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "ConceptGroup")
    public JAXBElement<ConceptGroupType> createConceptGroup(ConceptGroupType value) {
        return new JAXBElement<ConceptGroupType>(_ConceptGroup_QNAME, ConceptGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "ConceptualComponentModuleName")
    public JAXBElement<NameType> createConceptualComponentModuleName(NameType value) {
        return new JAXBElement<NameType>(_ConceptualComponentModuleName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InternationalStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "Abbreviation")
    public JAXBElement<InternationalStringType> createAbbreviation(InternationalStringType value) {
        return new JAXBElement<InternationalStringType>(_Abbreviation_QNAME, InternationalStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "ConceptGroupReference")
    public JAXBElement<ReferenceType> createConceptGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_ConceptGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "ConceptReference")
    public JAXBElement<ConceptReferenceType> createConceptReference(ConceptReferenceType value) {
        return new JAXBElement<ConceptReferenceType>(_ConceptReference_QNAME, ConceptReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UniverseSchemeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "UniverseScheme")
    public JAXBElement<UniverseSchemeType> createUniverseScheme(UniverseSchemeType value) {
        return new JAXBElement<UniverseSchemeType>(_UniverseScheme_QNAME, UniverseSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "UniverseSchemeName")
    public JAXBElement<NameType> createUniverseSchemeName(NameType value) {
        return new JAXBElement<NameType>(_UniverseSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimilarConceptType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "SimilarConcept")
    public JAXBElement<SimilarConceptType> createSimilarConcept(SimilarConceptType value) {
        return new JAXBElement<SimilarConceptType>(_SimilarConcept_QNAME, SimilarConceptType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VocabularyType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "Vocabulary")
    public JAXBElement<VocabularyType> createVocabulary(VocabularyType value) {
        return new JAXBElement<VocabularyType>(_Vocabulary_QNAME, VocabularyType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "ConceptGroupName")
    public JAXBElement<NameType> createConceptGroupName(NameType value) {
        return new JAXBElement<NameType>(_ConceptGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "CharacteristicReference")
    public JAXBElement<ConceptReferenceType> createCharacteristicReference(ConceptReferenceType value) {
        return new JAXBElement<ConceptReferenceType>(_CharacteristicReference_QNAME, ConceptReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InternationalStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "Title")
    public JAXBElement<InternationalStringType> createTitle(InternationalStringType value) {
        return new JAXBElement<InternationalStringType>(_Title_QNAME, InternationalStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SchemeReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "GeographicStructureSchemeReference")
    public JAXBElement<SchemeReferenceType> createGeographicStructureSchemeReference(SchemeReferenceType value) {
        return new JAXBElement<SchemeReferenceType>(_GeographicStructureSchemeReference_QNAME, SchemeReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "MachineReadable")
    public JAXBElement<CodeType> createMachineReadable(CodeType value) {
        return new JAXBElement<CodeType>(_MachineReadable_QNAME, CodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UniverseType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "Universe")
    public JAXBElement<UniverseType> createUniverse(UniverseType value) {
        return new JAXBElement<UniverseType>(_Universe_QNAME, UniverseType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "HumanReadable")
    public JAXBElement<StructuredStringType> createHumanReadable(StructuredStringType value) {
        return new JAXBElement<StructuredStringType>(_HumanReadable_QNAME, StructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "SimilarConceptReference")
    public JAXBElement<ReferenceType> createSimilarConceptReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_SimilarConceptReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "AdministrativePurpose")
    public JAXBElement<CodeValueType> createAdministrativePurpose(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_AdministrativePurpose_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptualComponentType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "ConceptualComponent")
    public JAXBElement<ConceptualComponentType> createConceptualComponent(ConceptualComponentType value) {
        return new JAXBElement<ConceptualComponentType>(_ConceptualComponent_QNAME, ConceptualComponentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UniverseType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "SubUniverse")
    public JAXBElement<UniverseType> createSubUniverse(UniverseType value) {
        return new JAXBElement<UniverseType>(_SubUniverse_QNAME, UniverseType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SchemeReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "UniverseSchemeReference")
    public JAXBElement<SchemeReferenceType> createUniverseSchemeReference(SchemeReferenceType value) {
        return new JAXBElement<SchemeReferenceType>(_UniverseSchemeReference_QNAME, SchemeReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "GeographicStructureSchemeName")
    public JAXBElement<NameType> createGeographicStructureSchemeName(NameType value) {
        return new JAXBElement<NameType>(_GeographicStructureSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "Difference")
    public JAXBElement<StructuredStringType> createDifference(StructuredStringType value) {
        return new JAXBElement<StructuredStringType>(_Difference_QNAME, StructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptSchemeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "ConceptScheme")
    public JAXBElement<ConceptSchemeType> createConceptScheme(ConceptSchemeType value) {
        return new JAXBElement<ConceptSchemeType>(_ConceptScheme_QNAME, ConceptSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SchemeReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_1", name = "GeographicLocationSchemeReference")
    public JAXBElement<SchemeReferenceType> createGeographicLocationSchemeReference(SchemeReferenceType value) {
        return new JAXBElement<SchemeReferenceType>(_GeographicLocationSchemeReference_QNAME, SchemeReferenceType.class, null, value);
    }

}
