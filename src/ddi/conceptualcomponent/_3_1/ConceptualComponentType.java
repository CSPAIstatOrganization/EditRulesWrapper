//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.conceptualcomponent._3_1;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;
import ddi.reusable._3_1.CoverageType;
import ddi.reusable._3_1.LabelType;
import ddi.reusable._3_1.MaintainableType;
import ddi.reusable._3_1.NameType;
import ddi.reusable._3_1.NoteType;
import ddi.reusable._3_1.OtherMaterialType;
import ddi.reusable._3_1.SchemeReferenceType;
import ddi.reusable._3_1.StructuredStringType;


/**
 * Concept, Universe, and Geography schemes used by the data being documented, or references to those schemes.
 * 
 * <p>Java class for ConceptualComponentType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ConceptualComponentType">
 *   &lt;complexContent>
 *     &lt;extension base="{ddi:reusable:3_1}MaintainableType">
 *       &lt;sequence>
 *         &lt;element ref="{ddi:conceptualcomponent:3_1}ConceptualComponentModuleName" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Label" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Description" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Coverage" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}OtherMaterial" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Note" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element ref="{ddi:conceptualcomponent:3_1}ConceptScheme"/>
 *           &lt;element ref="{ddi:conceptualcomponent:3_1}ConceptSchemeReference"/>
 *         &lt;/choice>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element ref="{ddi:conceptualcomponent:3_1}UniverseScheme"/>
 *           &lt;element ref="{ddi:conceptualcomponent:3_1}UniverseSchemeReference"/>
 *         &lt;/choice>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element ref="{ddi:conceptualcomponent:3_1}GeographicStructureScheme"/>
 *           &lt;element ref="{ddi:conceptualcomponent:3_1}GeographicStructureSchemeReference"/>
 *         &lt;/choice>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element ref="{ddi:conceptualcomponent:3_1}GeographicLocationScheme"/>
 *           &lt;element ref="{ddi:conceptualcomponent:3_1}GeographicLocationSchemeReference"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ConceptualComponentType", propOrder = {
    "conceptualComponentModuleName",
    "label",
    "description",
    "coverage",
    "otherMaterial",
    "note",
    "conceptSchemeOrConceptSchemeReference",
    "universeSchemeOrUniverseSchemeReference",
    "geographicStructureSchemeOrGeographicStructureSchemeReference",
    "geographicLocationSchemeOrGeographicLocationSchemeReference"
})
public class ConceptualComponentType
    extends MaintainableType
{

    @XmlElement(name = "ConceptualComponentModuleName")
    protected List<NameType> conceptualComponentModuleName;
    @XmlElement(name = "Label", namespace = "ddi:reusable:3_1")
    protected List<LabelType> label;
    @XmlElement(name = "Description", namespace = "ddi:reusable:3_1")
    protected List<StructuredStringType> description;
    @XmlElement(name = "Coverage", namespace = "ddi:reusable:3_1")
    protected CoverageType coverage;
    @XmlElement(name = "OtherMaterial", namespace = "ddi:reusable:3_1")
    protected List<OtherMaterialType> otherMaterial;
    @XmlElement(name = "Note", namespace = "ddi:reusable:3_1")
    protected List<NoteType> note;
    @XmlElements({
        @XmlElement(name = "ConceptScheme", type = ConceptSchemeType.class),
        @XmlElement(name = "ConceptSchemeReference", type = SchemeReferenceType.class)
    })
    protected List<Object> conceptSchemeOrConceptSchemeReference;
    @XmlElements({
        @XmlElement(name = "UniverseScheme", type = UniverseSchemeType.class),
        @XmlElement(name = "UniverseSchemeReference", type = SchemeReferenceType.class)
    })
    protected List<Object> universeSchemeOrUniverseSchemeReference;
    @XmlElements({
        @XmlElement(name = "GeographicStructureScheme", type = GeographicStructureSchemeType.class),
        @XmlElement(name = "GeographicStructureSchemeReference", type = SchemeReferenceType.class)
    })
    protected List<Object> geographicStructureSchemeOrGeographicStructureSchemeReference;
    @XmlElements({
        @XmlElement(name = "GeographicLocationScheme", type = GeographicLocationSchemeType.class),
        @XmlElement(name = "GeographicLocationSchemeReference", type = SchemeReferenceType.class)
    })
    protected List<Object> geographicLocationSchemeOrGeographicLocationSchemeReference;

    /**
     * Gets the value of the conceptualComponentModuleName property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptualComponentModuleName property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptualComponentModuleName().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     * 
     * 
     */
    public List<NameType> getConceptualComponentModuleName() {
        if (conceptualComponentModuleName == null) {
            conceptualComponentModuleName = new ArrayList<NameType>();
        }
        return this.conceptualComponentModuleName;
    }

    /**
     * Gets the value of the label property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     * 
     * 
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * Gets the value of the description property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the description property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDescription().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StructuredStringType }
     * 
     * 
     */
    public List<StructuredStringType> getDescription() {
        if (description == null) {
            description = new ArrayList<StructuredStringType>();
        }
        return this.description;
    }

    /**
     * Provides information about the topical, spatial, and temporal coverage of the conceptual components included in this module.
     * 
     * @return
     *     possible object is
     *     {@link CoverageType }
     *     
     */
    public CoverageType getCoverage() {
        return coverage;
    }

    /**
     * Sets the value of the coverage property.
     * 
     * @param value
     *     allowed object is
     *     {@link CoverageType }
     *     
     */
    public void setCoverage(CoverageType value) {
        this.coverage = value;
    }

    /**
     * Provides information about external resources related to the conceptual components described in this module.Gets the value of the otherMaterial property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the otherMaterial property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOtherMaterial().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OtherMaterialType }
     * 
     * 
     */
    public List<OtherMaterialType> getOtherMaterial() {
        if (otherMaterial == null) {
            otherMaterial = new ArrayList<OtherMaterialType>();
        }
        return this.otherMaterial;
    }

    /**
     * Footnote, or annotation, associated with the conceptual components des cribed in this module.Gets the value of the note property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the note property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNote().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NoteType }
     * 
     * 
     */
    public List<NoteType> getNote() {
        if (note == null) {
            note = new ArrayList<NoteType>();
        }
        return this.note;
    }

    /**
     * Gets the value of the conceptSchemeOrConceptSchemeReference property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptSchemeOrConceptSchemeReference property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptSchemeOrConceptSchemeReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ConceptSchemeType }
     * {@link SchemeReferenceType }
     * 
     * 
     */
    public List<Object> getConceptSchemeOrConceptSchemeReference() {
        if (conceptSchemeOrConceptSchemeReference == null) {
            conceptSchemeOrConceptSchemeReference = new ArrayList<Object>();
        }
        return this.conceptSchemeOrConceptSchemeReference;
    }

    /**
     * Gets the value of the universeSchemeOrUniverseSchemeReference property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the universeSchemeOrUniverseSchemeReference property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUniverseSchemeOrUniverseSchemeReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UniverseSchemeType }
     * {@link SchemeReferenceType }
     * 
     * 
     */
    public List<Object> getUniverseSchemeOrUniverseSchemeReference() {
        if (universeSchemeOrUniverseSchemeReference == null) {
            universeSchemeOrUniverseSchemeReference = new ArrayList<Object>();
        }
        return this.universeSchemeOrUniverseSchemeReference;
    }

    /**
     * Gets the value of the geographicStructureSchemeOrGeographicStructureSchemeReference property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the geographicStructureSchemeOrGeographicStructureSchemeReference property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGeographicStructureSchemeOrGeographicStructureSchemeReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link GeographicStructureSchemeType }
     * {@link SchemeReferenceType }
     * 
     * 
     */
    public List<Object> getGeographicStructureSchemeOrGeographicStructureSchemeReference() {
        if (geographicStructureSchemeOrGeographicStructureSchemeReference == null) {
            geographicStructureSchemeOrGeographicStructureSchemeReference = new ArrayList<Object>();
        }
        return this.geographicStructureSchemeOrGeographicStructureSchemeReference;
    }

    /**
     * Gets the value of the geographicLocationSchemeOrGeographicLocationSchemeReference property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the geographicLocationSchemeOrGeographicLocationSchemeReference property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGeographicLocationSchemeOrGeographicLocationSchemeReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link GeographicLocationSchemeType }
     * {@link SchemeReferenceType }
     * 
     * 
     */
    public List<Object> getGeographicLocationSchemeOrGeographicLocationSchemeReference() {
        if (geographicLocationSchemeOrGeographicLocationSchemeReference == null) {
            geographicLocationSchemeOrGeographicLocationSchemeReference = new ArrayList<Object>();
        }
        return this.geographicLocationSchemeOrGeographicLocationSchemeReference;
    }

}
