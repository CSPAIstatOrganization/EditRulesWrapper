//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.conceptualcomponent._3_1;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;
import ddi.reusable._3_1.LabelType;
import ddi.reusable._3_1.MaintainableType;
import ddi.reusable._3_1.NameType;
import ddi.reusable._3_1.SchemeReferenceType;
import ddi.reusable._3_1.StructuredStringType;
import ddi.reusable._3_1.VersionableType;


/**
 * Includes a comprehensive list of the concepts measured by the data that are being documented.
 * 
 * <p>Java class for ConceptSchemeType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ConceptSchemeType">
 *   &lt;complexContent>
 *     &lt;extension base="{ddi:reusable:3_1}MaintainableType">
 *       &lt;sequence>
 *         &lt;element ref="{ddi:conceptualcomponent:3_1}ConceptSchemeName" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Label" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Description" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:conceptualcomponent:3_1}ConceptSchemeReference" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:conceptualcomponent:3_1}Vocabulary" minOccurs="0"/>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element ref="{ddi:conceptualcomponent:3_1}Concept"/>
 *           &lt;element ref="{ddi:conceptualcomponent:3_1}DataElementConcept"/>
 *         &lt;/choice>
 *         &lt;element ref="{ddi:conceptualcomponent:3_1}ConceptGroup" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ConceptSchemeType", propOrder = {
    "conceptSchemeName",
    "label",
    "description",
    "conceptSchemeReference",
    "vocabulary",
    "conceptOrDataElementConcept",
    "conceptGroup"
})
public class ConceptSchemeType
    extends MaintainableType
{

    @XmlElement(name = "ConceptSchemeName")
    protected List<NameType> conceptSchemeName;
    @XmlElement(name = "Label", namespace = "ddi:reusable:3_1")
    protected List<LabelType> label;
    @XmlElement(name = "Description", namespace = "ddi:reusable:3_1")
    protected List<StructuredStringType> description;
    @XmlElement(name = "ConceptSchemeReference")
    protected List<SchemeReferenceType> conceptSchemeReference;
    @XmlElement(name = "Vocabulary")
    protected VocabularyType vocabulary;
    @XmlElements({
        @XmlElement(name = "Concept", type = ConceptType.class),
        @XmlElement(name = "DataElementConcept", type = DataElementConceptType.class)
    })
    protected List<VersionableType> conceptOrDataElementConcept;
    @XmlElement(name = "ConceptGroup")
    protected List<ConceptGroupType> conceptGroup;

    /**
     * Gets the value of the conceptSchemeName property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptSchemeName property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptSchemeName().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     * 
     * 
     */
    public List<NameType> getConceptSchemeName() {
        if (conceptSchemeName == null) {
            conceptSchemeName = new ArrayList<NameType>();
        }
        return this.conceptSchemeName;
    }

    /**
     * A display label for the concept scheme.Gets the value of the label property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     * 
     * 
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * A description of the use of the concept scheme.Gets the value of the description property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the description property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDescription().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StructuredStringType }
     * 
     * 
     */
    public List<StructuredStringType> getDescription() {
        if (description == null) {
            description = new ArrayList<StructuredStringType>();
        }
        return this.description;
    }

    /**
     * Provides for inclusion by reference of other concept schemes.Gets the value of the conceptSchemeReference property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptSchemeReference property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptSchemeReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SchemeReferenceType }
     * 
     * 
     */
    public List<SchemeReferenceType> getConceptSchemeReference() {
        if (conceptSchemeReference == null) {
            conceptSchemeReference = new ArrayList<SchemeReferenceType>();
        }
        return this.conceptSchemeReference;
    }

    /**
     * Provides information about the vocabulary used to create the concept scheme.
     * 
     * @return
     *     possible object is
     *     {@link VocabularyType }
     *     
     */
    public VocabularyType getVocabulary() {
        return vocabulary;
    }

    /**
     * Sets the value of the vocabulary property.
     * 
     * @param value
     *     allowed object is
     *     {@link VocabularyType }
     *     
     */
    public void setVocabulary(VocabularyType value) {
        this.vocabulary = value;
    }

    /**
     * Gets the value of the conceptOrDataElementConcept property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptOrDataElementConcept property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptOrDataElementConcept().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ConceptType }
     * {@link DataElementConceptType }
     * 
     * 
     */
    public List<VersionableType> getConceptOrDataElementConcept() {
        if (conceptOrDataElementConcept == null) {
            conceptOrDataElementConcept = new ArrayList<VersionableType>();
        }
        return this.conceptOrDataElementConcept;
    }

    /**
     * Allows for grouping of concepts; groups may have a hierarchical structure.Gets the value of the conceptGroup property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptGroup property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptGroup().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ConceptGroupType }
     * 
     * 
     */
    public List<ConceptGroupType> getConceptGroup() {
        if (conceptGroup == null) {
            conceptGroup = new ArrayList<ConceptGroupType>();
        }
        return this.conceptGroup;
    }

}
