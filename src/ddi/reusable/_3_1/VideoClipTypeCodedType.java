//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.reusable._3_1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for VideoClipTypeCodedType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="VideoClipTypeCodedType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="byte"/>
 *     &lt;enumeration value="smil"/>
 *     &lt;enumeration value="midi"/>
 *     &lt;enumeration value="smpte-25"/>
 *     &lt;enumeration value="smpte-24"/>
 *     &lt;enumeration value="smpte-df30"/>
 *     &lt;enumeration value="smpte-ndf30"/>
 *     &lt;enumeration value="smpte-df29.97"/>
 *     &lt;enumeration value="smpte-ndf29.97"/>
 *     &lt;enumeration value="time"/>
 *     &lt;enumeration value="tcf"/>
 *     &lt;enumeration value="other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "VideoClipTypeCodedType")
@XmlEnum
public enum VideoClipTypeCodedType {


    /**
     * Byte format.
     * 
     */
    @XmlEnumValue("byte")
    BYTE("byte"),

    /**
     * SMIl format.
     * 
     */
    @XmlEnumValue("smil")
    SMIL("smil"),

    /**
     * MIDI format.
     * 
     */
    @XmlEnumValue("midi")
    MIDI("midi"),

    /**
     * SMPTE 25 video format.
     * 
     */
    @XmlEnumValue("smpte-25")
    SMPTE_25("smpte-25"),

    /**
     * SMPTE 24 video format.
     * 
     */
    @XmlEnumValue("smpte-24")
    SMPTE_24("smpte-24"),

    /**
     * SMPTE-DF 30 video format.
     * 
     */
    @XmlEnumValue("smpte-df30")
    SMPTE_DF_30("smpte-df30"),

    /**
     * SMPTE-NDF 30 video format.
     * 
     */
    @XmlEnumValue("smpte-ndf30")
    SMPTE_NDF_30("smpte-ndf30"),

    /**
     * SMPTE-DF 29.97 video format.
     * 
     */
    @XmlEnumValue("smpte-df29.97")
    SMPTE_DF_29_97("smpte-df29.97"),

    /**
     * SMPTE-NDF 29.97 video format.
     * 
     */
    @XmlEnumValue("smpte-ndf29.97")
    SMPTE_NDF_29_97("smpte-ndf29.97"),

    /**
     * Time-based format.
     * 
     */
    @XmlEnumValue("time")
    TIME("time"),

    /**
     * TCF format.
     * 
     */
    @XmlEnumValue("tcf")
    TCF("tcf"),

    /**
     * A format not listed above.
     * 
     */
    @XmlEnumValue("other")
    OTHER("other");
    private final String value;

    VideoClipTypeCodedType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static VideoClipTypeCodedType fromValue(String v) {
        for (VideoClipTypeCodedType c: VideoClipTypeCodedType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
