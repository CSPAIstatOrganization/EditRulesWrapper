//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.group._3_1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DataSetGroupCodeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DataSetGroupCodeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *     &lt;enumeration value="D0"/>
 *     &lt;enumeration value="D1"/>
 *     &lt;enumeration value="D2"/>
 *     &lt;enumeration value="D3"/>
 *     &lt;enumeration value="D4"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DataSetGroupCodeType")
@XmlEnum
public enum DataSetGroupCodeType {


    /**
     * No specified relationship
     * 
     */
    @XmlEnumValue("D0")
    D_0("D0"),

    /**
     * Single data file from a data collection
     * 
     */
    @XmlEnumValue("D1")
    D_1("D1"),

    /**
     * Multiple data products from a single data collection
     * 
     */
    @XmlEnumValue("D2")
    D_2("D2"),

    /**
     * Integration of multiple data sets into a single integrated structure
     * 
     */
    @XmlEnumValue("D3")
    D_3("D3"),

    /**
     * Multiple data files each from a different data collection
     * 
     */
    @XmlEnumValue("D4")
    D_4("D4");
    private final String value;

    DataSetGroupCodeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DataSetGroupCodeType fromValue(String v) {
        for (DataSetGroupCodeType c: DataSetGroupCodeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
