//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.comparative._3_1;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;
import ddi.reusable._3_1.CodeValueType;
import ddi.reusable._3_1.NameType;
import ddi.reusable._3_1.ReferenceType;
import ddi.reusable._3_1.StructuredStringType;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ddi.comparative._3_1 package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _CommonalityTypeCoded_QNAME = new QName("ddi:comparative:3_1", "CommonalityTypeCoded");
    private final static QName _CategoryMap_QNAME = new QName("ddi:comparative:3_1", "CategoryMap");
    private final static QName _MapName_QNAME = new QName("ddi:comparative:3_1", "MapName");
    private final static QName _ItemMap_QNAME = new QName("ddi:comparative:3_1", "ItemMap");
    private final static QName _QuestionMap_QNAME = new QName("ddi:comparative:3_1", "QuestionMap");
    private final static QName _ConceptMap_QNAME = new QName("ddi:comparative:3_1", "ConceptMap");
    private final static QName _VariableMap_QNAME = new QName("ddi:comparative:3_1", "VariableMap");
    private final static QName _Commonality_QNAME = new QName("ddi:comparative:3_1", "Commonality");
    private final static QName _CodeMap_QNAME = new QName("ddi:comparative:3_1", "CodeMap");
    private final static QName _ComparisonName_QNAME = new QName("ddi:comparative:3_1", "ComparisonName");
    private final static QName _UserDefinedCorrespondenceProperty_QNAME = new QName("ddi:comparative:3_1", "UserDefinedCorrespondenceProperty");
    private final static QName _Difference_QNAME = new QName("ddi:comparative:3_1", "Difference");
    private final static QName _UniverseMap_QNAME = new QName("ddi:comparative:3_1", "UniverseMap");
    private final static QName _ComparisonDescription_QNAME = new QName("ddi:comparative:3_1", "ComparisonDescription");
    private final static QName _TargetSchemeReference_QNAME = new QName("ddi:comparative:3_1", "TargetSchemeReference");
    private final static QName _CodeMapName_QNAME = new QName("ddi:comparative:3_1", "CodeMapName");
    private final static QName _SourceSchemeReference_QNAME = new QName("ddi:comparative:3_1", "SourceSchemeReference");
    private final static QName _Comparison_QNAME = new QName("ddi:comparative:3_1", "Comparison");
    private final static QName _Correspondence_QNAME = new QName("ddi:comparative:3_1", "Correspondence");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ddi.comparative._3_1
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link CorrespondenceType }
     * 
     */
    public CorrespondenceType createCorrespondenceType() {
        return new CorrespondenceType();
    }

    /**
     * Create an instance of {@link GenericMapType }
     * 
     */
    public GenericMapType createGenericMapType() {
        return new GenericMapType();
    }

    /**
     * Create an instance of {@link ItemMapType }
     * 
     */
    public ItemMapType createItemMapType() {
        return new ItemMapType();
    }

    /**
     * Create an instance of {@link ComparisonType }
     * 
     */
    public ComparisonType createComparisonType() {
        return new ComparisonType();
    }

    /**
     * Create an instance of {@link CodeMapType }
     * 
     */
    public CodeMapType createCodeMapType() {
        return new CodeMapType();
    }

    /**
     * Create an instance of {@link UserDefinedCorrespondencePropertyType }
     * 
     */
    public UserDefinedCorrespondencePropertyType createUserDefinedCorrespondencePropertyType() {
        return new UserDefinedCorrespondencePropertyType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "CommonalityTypeCoded")
    public JAXBElement<CodeValueType> createCommonalityTypeCoded(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_CommonalityTypeCoded_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GenericMapType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "CategoryMap")
    public JAXBElement<GenericMapType> createCategoryMap(GenericMapType value) {
        return new JAXBElement<GenericMapType>(_CategoryMap_QNAME, GenericMapType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "MapName")
    public JAXBElement<NameType> createMapName(NameType value) {
        return new JAXBElement<NameType>(_MapName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ItemMapType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "ItemMap")
    public JAXBElement<ItemMapType> createItemMap(ItemMapType value) {
        return new JAXBElement<ItemMapType>(_ItemMap_QNAME, ItemMapType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GenericMapType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "QuestionMap")
    public JAXBElement<GenericMapType> createQuestionMap(GenericMapType value) {
        return new JAXBElement<GenericMapType>(_QuestionMap_QNAME, GenericMapType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GenericMapType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "ConceptMap")
    public JAXBElement<GenericMapType> createConceptMap(GenericMapType value) {
        return new JAXBElement<GenericMapType>(_ConceptMap_QNAME, GenericMapType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GenericMapType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "VariableMap")
    public JAXBElement<GenericMapType> createVariableMap(GenericMapType value) {
        return new JAXBElement<GenericMapType>(_VariableMap_QNAME, GenericMapType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "Commonality")
    public JAXBElement<StructuredStringType> createCommonality(StructuredStringType value) {
        return new JAXBElement<StructuredStringType>(_Commonality_QNAME, StructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeMapType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "CodeMap")
    public JAXBElement<CodeMapType> createCodeMap(CodeMapType value) {
        return new JAXBElement<CodeMapType>(_CodeMap_QNAME, CodeMapType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "ComparisonName")
    public JAXBElement<NameType> createComparisonName(NameType value) {
        return new JAXBElement<NameType>(_ComparisonName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UserDefinedCorrespondencePropertyType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "UserDefinedCorrespondenceProperty")
    public JAXBElement<UserDefinedCorrespondencePropertyType> createUserDefinedCorrespondenceProperty(UserDefinedCorrespondencePropertyType value) {
        return new JAXBElement<UserDefinedCorrespondencePropertyType>(_UserDefinedCorrespondenceProperty_QNAME, UserDefinedCorrespondencePropertyType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "Difference")
    public JAXBElement<StructuredStringType> createDifference(StructuredStringType value) {
        return new JAXBElement<StructuredStringType>(_Difference_QNAME, StructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GenericMapType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "UniverseMap")
    public JAXBElement<GenericMapType> createUniverseMap(GenericMapType value) {
        return new JAXBElement<GenericMapType>(_UniverseMap_QNAME, GenericMapType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "ComparisonDescription")
    public JAXBElement<StructuredStringType> createComparisonDescription(StructuredStringType value) {
        return new JAXBElement<StructuredStringType>(_ComparisonDescription_QNAME, StructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "TargetSchemeReference")
    public JAXBElement<ReferenceType> createTargetSchemeReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_TargetSchemeReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "CodeMapName")
    public JAXBElement<NameType> createCodeMapName(NameType value) {
        return new JAXBElement<NameType>(_CodeMapName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "SourceSchemeReference")
    public JAXBElement<ReferenceType> createSourceSchemeReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_SourceSchemeReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComparisonType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "Comparison")
    public JAXBElement<ComparisonType> createComparison(ComparisonType value) {
        return new JAXBElement<ComparisonType>(_Comparison_QNAME, ComparisonType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CorrespondenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:comparative:3_1", name = "Correspondence")
    public JAXBElement<CorrespondenceType> createCorrespondence(CorrespondenceType value) {
        return new JAXBElement<CorrespondenceType>(_Correspondence_QNAME, CorrespondenceType.class, null, value);
    }

}
