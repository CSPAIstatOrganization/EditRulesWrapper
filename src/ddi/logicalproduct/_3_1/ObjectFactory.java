//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.logicalproduct._3_1;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;
import ddi.reusable._3_1.CategoryRelationCodeType;
import ddi.reusable._3_1.CodeValueType;
import ddi.reusable._3_1.DateTimeRepresentationType;
import ddi.reusable._3_1.ExternalCategoryRepresentationType;
import ddi.reusable._3_1.InternationalStringType;
import ddi.reusable._3_1.NameType;
import ddi.reusable._3_1.NumericRepresentationType;
import ddi.reusable._3_1.ReferenceType;
import ddi.reusable._3_1.SchemeReferenceType;
import ddi.reusable._3_1.StructuredStringType;
import ddi.reusable._3_1.TextRepresentationType;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ddi.logicalproduct._3_1 package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _VariableScheme_QNAME = new QName("ddi:logicalproduct:3_1", "VariableScheme");
    private final static QName _DataExistence_QNAME = new QName("ddi:logicalproduct:3_1", "DataExistence");
    private final static QName _NCube_QNAME = new QName("ddi:logicalproduct:3_1", "NCube");
    private final static QName _VariableGroup_QNAME = new QName("ddi:logicalproduct:3_1", "VariableGroup");
    private final static QName _AttachmentGroupReference_QNAME = new QName("ddi:logicalproduct:3_1", "AttachmentGroupReference");
    private final static QName _NCubeName_QNAME = new QName("ddi:logicalproduct:3_1", "NCubeName");
    private final static QName _VariableGroupReference_QNAME = new QName("ddi:logicalproduct:3_1", "VariableGroupReference");
    private final static QName _VariableSpecificationReference_QNAME = new QName("ddi:logicalproduct:3_1", "VariableSpecificationReference");
    private final static QName _NCubeScheme_QNAME = new QName("ddi:logicalproduct:3_1", "NCubeScheme");
    private final static QName _EmbargoReference_QNAME = new QName("ddi:logicalproduct:3_1", "EmbargoReference");
    private final static QName _NCubeSchemeReference_QNAME = new QName("ddi:logicalproduct:3_1", "NCubeSchemeReference");
    private final static QName _RecordRelationshipName_QNAME = new QName("ddi:logicalproduct:3_1", "RecordRelationshipName");
    private final static QName _CategoryName_QNAME = new QName("ddi:logicalproduct:3_1", "CategoryName");
    private final static QName _Variable_QNAME = new QName("ddi:logicalproduct:3_1", "Variable");
    private final static QName _VariableUsedReference_QNAME = new QName("ddi:logicalproduct:3_1", "VariableUsedReference");
    private final static QName _DataRelationship_QNAME = new QName("ddi:logicalproduct:3_1", "DataRelationship");
    private final static QName _VariableValueReference_QNAME = new QName("ddi:logicalproduct:3_1", "VariableValueReference");
    private final static QName _VariableDefinition_QNAME = new QName("ddi:logicalproduct:3_1", "VariableDefinition");
    private final static QName _Dimension_QNAME = new QName("ddi:logicalproduct:3_1", "Dimension");
    private final static QName _NCubeGroup_QNAME = new QName("ddi:logicalproduct:3_1", "NCubeGroup");
    private final static QName _CodingInstructionsReference_QNAME = new QName("ddi:logicalproduct:3_1", "CodingInstructionsReference");
    private final static QName _BaseLogicalProduct_QNAME = new QName("ddi:logicalproduct:3_1", "BaseLogicalProduct");
    private final static QName _CoordinateGroup_QNAME = new QName("ddi:logicalproduct:3_1", "CoordinateGroup");
    private final static QName _DateTimeRepresentation_QNAME = new QName("ddi:logicalproduct:3_1", "DateTimeRepresentation");
    private final static QName _ComponentReference_QNAME = new QName("ddi:logicalproduct:3_1", "ComponentReference");
    private final static QName _Interval_QNAME = new QName("ddi:logicalproduct:3_1", "Interval");
    private final static QName _HierarchyType_QNAME = new QName("ddi:logicalproduct:3_1", "HierarchyType");
    private final static QName _Code_QNAME = new QName("ddi:logicalproduct:3_1", "Code");
    private final static QName _IncludedCodeReference_QNAME = new QName("ddi:logicalproduct:3_1", "IncludedCodeReference");
    private final static QName _CategoryGroupName_QNAME = new QName("ddi:logicalproduct:3_1", "CategoryGroupName");
    private final static QName _RecordReferenceSource_QNAME = new QName("ddi:logicalproduct:3_1", "RecordReferenceSource");
    private final static QName _Attribute_QNAME = new QName("ddi:logicalproduct:3_1", "Attribute");
    private final static QName _Representation_QNAME = new QName("ddi:logicalproduct:3_1", "Representation");
    private final static QName _StandardWeightReference_QNAME = new QName("ddi:logicalproduct:3_1", "StandardWeightReference");
    private final static QName _Category_QNAME = new QName("ddi:logicalproduct:3_1", "Category");
    private final static QName _NCubeSchemeName_QNAME = new QName("ddi:logicalproduct:3_1", "NCubeSchemeName");
    private final static QName _CategoryGroup_QNAME = new QName("ddi:logicalproduct:3_1", "CategoryGroup");
    private final static QName _CategorySchemeReference_QNAME = new QName("ddi:logicalproduct:3_1", "CategorySchemeReference");
    private final static QName _NCubeGroupReference_QNAME = new QName("ddi:logicalproduct:3_1", "NCubeGroupReference");
    private final static QName _GroupTypeCoded_QNAME = new QName("ddi:logicalproduct:3_1", "GroupTypeCoded");
    private final static QName _ValueRepresentation_QNAME = new QName("ddi:logicalproduct:3_1", "ValueRepresentation");
    private final static QName _DimensionValue_QNAME = new QName("ddi:logicalproduct:3_1", "DimensionValue");
    private final static QName _CategoryScheme_QNAME = new QName("ddi:logicalproduct:3_1", "CategoryScheme");
    private final static QName _Value_QNAME = new QName("ddi:logicalproduct:3_1", "Value");
    private final static QName _VariablesInRecord_QNAME = new QName("ddi:logicalproduct:3_1", "VariablesInRecord");
    private final static QName _NCubeGroupName_QNAME = new QName("ddi:logicalproduct:3_1", "NCubeGroupName");
    private final static QName _CodeRepresentation_QNAME = new QName("ddi:logicalproduct:3_1", "CodeRepresentation");
    private final static QName _LogicalProductName_QNAME = new QName("ddi:logicalproduct:3_1", "LogicalProductName");
    private final static QName _ConceptReference_QNAME = new QName("ddi:logicalproduct:3_1", "ConceptReference");
    private final static QName _Definition_QNAME = new QName("ddi:logicalproduct:3_1", "Definition");
    private final static QName _DataRelationshipName_QNAME = new QName("ddi:logicalproduct:3_1", "DataRelationshipName");
    private final static QName _AttachmentLevel_QNAME = new QName("ddi:logicalproduct:3_1", "AttachmentLevel");
    private final static QName _ImputationReference_QNAME = new QName("ddi:logicalproduct:3_1", "ImputationReference");
    private final static QName _CategoryReference_QNAME = new QName("ddi:logicalproduct:3_1", "CategoryReference");
    private final static QName _Level_QNAME = new QName("ddi:logicalproduct:3_1", "Level");
    private final static QName _TextRepresentation_QNAME = new QName("ddi:logicalproduct:3_1", "TextRepresentation");
    private final static QName _VariableGroupName_QNAME = new QName("ddi:logicalproduct:3_1", "VariableGroupName");
    private final static QName _CodeSchemeName_QNAME = new QName("ddi:logicalproduct:3_1", "CodeSchemeName");
    private final static QName _ConcatenatedValue_QNAME = new QName("ddi:logicalproduct:3_1", "ConcatenatedValue");
    private final static QName _RecordRelationship_QNAME = new QName("ddi:logicalproduct:3_1", "RecordRelationship");
    private final static QName _VariableSchemeName_QNAME = new QName("ddi:logicalproduct:3_1", "VariableSchemeName");
    private final static QName _LogicalRecord_QNAME = new QName("ddi:logicalproduct:3_1", "LogicalRecord");
    private final static QName _CategorySchemeName_QNAME = new QName("ddi:logicalproduct:3_1", "CategorySchemeName");
    private final static QName _LogicalProduct_QNAME = new QName("ddi:logicalproduct:3_1", "LogicalProduct");
    private final static QName _Measure_QNAME = new QName("ddi:logicalproduct:3_1", "Measure");
    private final static QName _Range_QNAME = new QName("ddi:logicalproduct:3_1", "Range");
    private final static QName _VariableConcatenation_QNAME = new QName("ddi:logicalproduct:3_1", "VariableConcatenation");
    private final static QName _CodeScheme_QNAME = new QName("ddi:logicalproduct:3_1", "CodeScheme");
    private final static QName _CodeSchemeReference_QNAME = new QName("ddi:logicalproduct:3_1", "CodeSchemeReference");
    private final static QName _GroupType_QNAME = new QName("ddi:logicalproduct:3_1", "GroupType");
    private final static QName _VariableReference_QNAME = new QName("ddi:logicalproduct:3_1", "VariableReference");
    private final static QName _QuestionReference_QNAME = new QName("ddi:logicalproduct:3_1", "QuestionReference");
    private final static QName _NCubeReference_QNAME = new QName("ddi:logicalproduct:3_1", "NCubeReference");
    private final static QName _Purpose_QNAME = new QName("ddi:logicalproduct:3_1", "Purpose");
    private final static QName _CaseIdentification_QNAME = new QName("ddi:logicalproduct:3_1", "CaseIdentification");
    private final static QName _VariableName_QNAME = new QName("ddi:logicalproduct:3_1", "VariableName");
    private final static QName _RecordReferenceTarget_QNAME = new QName("ddi:logicalproduct:3_1", "RecordReferenceTarget");
    private final static QName _VariableSchemeReference_QNAME = new QName("ddi:logicalproduct:3_1", "VariableSchemeReference");
    private final static QName _Generation_QNAME = new QName("ddi:logicalproduct:3_1", "Generation");
    private final static QName _AggregationDefinition_QNAME = new QName("ddi:logicalproduct:3_1", "AggregationDefinition");
    private final static QName _NCubesInRecord_QNAME = new QName("ddi:logicalproduct:3_1", "NCubesInRecord");
    private final static QName _RelationshipType_QNAME = new QName("ddi:logicalproduct:3_1", "RelationshipType");
    private final static QName _ExternalCategoryRepresentation_QNAME = new QName("ddi:logicalproduct:3_1", "ExternalCategoryRepresentation");
    private final static QName _LogicalRecordName_QNAME = new QName("ddi:logicalproduct:3_1", "LogicalRecordName");
    private final static QName _SupportForMultipleSegments_QNAME = new QName("ddi:logicalproduct:3_1", "SupportForMultipleSegments");
    private final static QName _CaseSpecification_QNAME = new QName("ddi:logicalproduct:3_1", "CaseSpecification");
    private final static QName _WeightVariableReference_QNAME = new QName("ddi:logicalproduct:3_1", "WeightVariableReference");
    private final static QName _NCubeLogicalProduct_QNAME = new QName("ddi:logicalproduct:3_1", "NCubeLogicalProduct");
    private final static QName _NumericRepresentation_QNAME = new QName("ddi:logicalproduct:3_1", "NumericRepresentation");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ddi.logicalproduct._3_1
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link CaseIdentificationType }
     * 
     */
    public CaseIdentificationType createCaseIdentificationType() {
        return new CaseIdentificationType();
    }

    /**
     * Create an instance of {@link LogicalProductType }
     * 
     */
    public LogicalProductType createLogicalProductType() {
        return new LogicalProductType();
    }

    /**
     * Create an instance of {@link MeasureType }
     * 
     */
    public MeasureType createMeasureType() {
        return new MeasureType();
    }

    /**
     * Create an instance of {@link CoordinateGroupType }
     * 
     */
    public CoordinateGroupType createCoordinateGroupType() {
        return new CoordinateGroupType();
    }

    /**
     * Create an instance of {@link LogicalRecordType }
     * 
     */
    public LogicalRecordType createLogicalRecordType() {
        return new LogicalRecordType();
    }

    /**
     * Create an instance of {@link VariablesInRecordType }
     * 
     */
    public VariablesInRecordType createVariablesInRecordType() {
        return new VariablesInRecordType();
    }

    /**
     * Create an instance of {@link AttributeType }
     * 
     */
    public AttributeType createAttributeType() {
        return new AttributeType();
    }

    /**
     * Create an instance of {@link VariableUsedReferenceType }
     * 
     */
    public VariableUsedReferenceType createVariableUsedReferenceType() {
        return new VariableUsedReferenceType();
    }

    /**
     * Create an instance of {@link ddi.logicalproduct._3_1.RepresentationType }
     * 
     */
    public ddi.logicalproduct._3_1.RepresentationType createRepresentationType() {
        return new ddi.logicalproduct._3_1.RepresentationType();
    }

    /**
     * Create an instance of {@link DataRelationshipType }
     * 
     */
    public DataRelationshipType createDataRelationshipType() {
        return new DataRelationshipType();
    }

    /**
     * Create an instance of {@link CodeRepresentationType }
     * 
     */
    public CodeRepresentationType createCodeRepresentationType() {
        return new CodeRepresentationType();
    }

    /**
     * Create an instance of {@link ValueType }
     * 
     */
    public ValueType createValueType() {
        return new ValueType();
    }

    /**
     * Create an instance of {@link IncludedCodeReferenceType }
     * 
     */
    public IncludedCodeReferenceType createIncludedCodeReferenceType() {
        return new IncludedCodeReferenceType();
    }

    /**
     * Create an instance of {@link VariableType }
     * 
     */
    public VariableType createVariableType() {
        return new VariableType();
    }

    /**
     * Create an instance of {@link CaseSpecificationType }
     * 
     */
    public CaseSpecificationType createCaseSpecificationType() {
        return new CaseSpecificationType();
    }

    /**
     * Create an instance of {@link VariableValueReferenceType }
     * 
     */
    public VariableValueReferenceType createVariableValueReferenceType() {
        return new VariableValueReferenceType();
    }

    /**
     * Create an instance of {@link NCubeLogicalProductType }
     * 
     */
    public NCubeLogicalProductType createNCubeLogicalProductType() {
        return new NCubeLogicalProductType();
    }

    /**
     * Create an instance of {@link RecordReferenceSourceType }
     * 
     */
    public RecordReferenceSourceType createRecordReferenceSourceType() {
        return new RecordReferenceSourceType();
    }

    /**
     * Create an instance of {@link AggregationDefinitionType }
     * 
     */
    public AggregationDefinitionType createAggregationDefinitionType() {
        return new AggregationDefinitionType();
    }

    /**
     * Create an instance of {@link NCubesInRecordType }
     * 
     */
    public NCubesInRecordType createNCubesInRecordType() {
        return new NCubesInRecordType();
    }

    /**
     * Create an instance of {@link RecordRelationshipType }
     * 
     */
    public RecordRelationshipType createRecordRelationshipType() {
        return new RecordRelationshipType();
    }

    /**
     * Create an instance of {@link IntervalType }
     * 
     */
    public IntervalType createIntervalType() {
        return new IntervalType();
    }

    /**
     * Create an instance of {@link CohortType }
     * 
     */
    public CohortType createCohortType() {
        return new CohortType();
    }

    /**
     * Create an instance of {@link NCubeGroupType }
     * 
     */
    public NCubeGroupType createNCubeGroupType() {
        return new NCubeGroupType();
    }

    /**
     * Create an instance of {@link CodeType }
     * 
     */
    public CodeType createCodeType() {
        return new CodeType();
    }

    /**
     * Create an instance of {@link CategorySchemeType }
     * 
     */
    public CategorySchemeType createCategorySchemeType() {
        return new CategorySchemeType();
    }

    /**
     * Create an instance of {@link ConcatenatedValueType }
     * 
     */
    public ConcatenatedValueType createConcatenatedValueType() {
        return new ConcatenatedValueType();
    }

    /**
     * Create an instance of {@link VariableSpecificationReferenceType }
     * 
     */
    public VariableSpecificationReferenceType createVariableSpecificationReferenceType() {
        return new VariableSpecificationReferenceType();
    }

    /**
     * Create an instance of {@link CodeSchemeReferenceType }
     * 
     */
    public CodeSchemeReferenceType createCodeSchemeReferenceType() {
        return new CodeSchemeReferenceType();
    }

    /**
     * Create an instance of {@link NCubeSchemeType }
     * 
     */
    public NCubeSchemeType createNCubeSchemeType() {
        return new NCubeSchemeType();
    }

    /**
     * Create an instance of {@link CodeSchemeType }
     * 
     */
    public CodeSchemeType createCodeSchemeType() {
        return new CodeSchemeType();
    }

    /**
     * Create an instance of {@link VariableConcatenationType }
     * 
     */
    public VariableConcatenationType createVariableConcatenationType() {
        return new VariableConcatenationType();
    }

    /**
     * Create an instance of {@link RangeType }
     * 
     */
    public RangeType createRangeType() {
        return new RangeType();
    }

    /**
     * Create an instance of {@link CategoryGroupType }
     * 
     */
    public CategoryGroupType createCategoryGroupType() {
        return new CategoryGroupType();
    }

    /**
     * Create an instance of {@link NCubeType }
     * 
     */
    public NCubeType createNCubeType() {
        return new NCubeType();
    }

    /**
     * Create an instance of {@link GroupTypeCodedType }
     * 
     */
    public GroupTypeCodedType createGroupTypeCodedType() {
        return new GroupTypeCodedType();
    }

    /**
     * Create an instance of {@link VariableGroupType }
     * 
     */
    public VariableGroupType createVariableGroupType() {
        return new VariableGroupType();
    }

    /**
     * Create an instance of {@link DimensionType }
     * 
     */
    public DimensionType createDimensionType() {
        return new DimensionType();
    }

    /**
     * Create an instance of {@link GenerationType }
     * 
     */
    public GenerationType createGenerationType() {
        return new GenerationType();
    }

    /**
     * Create an instance of {@link CategoryType }
     * 
     */
    public CategoryType createCategoryType() {
        return new CategoryType();
    }

    /**
     * Create an instance of {@link DataExistenceType }
     * 
     */
    public DataExistenceType createDataExistenceType() {
        return new DataExistenceType();
    }

    /**
     * Create an instance of {@link VariableSchemeType }
     * 
     */
    public VariableSchemeType createVariableSchemeType() {
        return new VariableSchemeType();
    }

    /**
     * Create an instance of {@link LevelType }
     * 
     */
    public LevelType createLevelType() {
        return new LevelType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableSchemeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "VariableScheme")
    public JAXBElement<VariableSchemeType> createVariableScheme(VariableSchemeType value) {
        return new JAXBElement<VariableSchemeType>(_VariableScheme_QNAME, VariableSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataExistenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "DataExistence")
    public JAXBElement<DataExistenceType> createDataExistence(DataExistenceType value) {
        return new JAXBElement<DataExistenceType>(_DataExistence_QNAME, DataExistenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCubeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "NCube")
    public JAXBElement<NCubeType> createNCube(NCubeType value) {
        return new JAXBElement<NCubeType>(_NCube_QNAME, NCubeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableGroupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "VariableGroup")
    public JAXBElement<VariableGroupType> createVariableGroup(VariableGroupType value) {
        return new JAXBElement<VariableGroupType>(_VariableGroup_QNAME, VariableGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "AttachmentGroupReference")
    public JAXBElement<ReferenceType> createAttachmentGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_AttachmentGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "NCubeName")
    public JAXBElement<NameType> createNCubeName(NameType value) {
        return new JAXBElement<NameType>(_NCubeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "VariableGroupReference")
    public JAXBElement<ReferenceType> createVariableGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_VariableGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableSpecificationReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "VariableSpecificationReference")
    public JAXBElement<VariableSpecificationReferenceType> createVariableSpecificationReference(VariableSpecificationReferenceType value) {
        return new JAXBElement<VariableSpecificationReferenceType>(_VariableSpecificationReference_QNAME, VariableSpecificationReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCubeSchemeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "NCubeScheme")
    public JAXBElement<NCubeSchemeType> createNCubeScheme(NCubeSchemeType value) {
        return new JAXBElement<NCubeSchemeType>(_NCubeScheme_QNAME, NCubeSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "EmbargoReference")
    public JAXBElement<ReferenceType> createEmbargoReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_EmbargoReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SchemeReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "NCubeSchemeReference")
    public JAXBElement<SchemeReferenceType> createNCubeSchemeReference(SchemeReferenceType value) {
        return new JAXBElement<SchemeReferenceType>(_NCubeSchemeReference_QNAME, SchemeReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "RecordRelationshipName")
    public JAXBElement<NameType> createRecordRelationshipName(NameType value) {
        return new JAXBElement<NameType>(_RecordRelationshipName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "CategoryName")
    public JAXBElement<NameType> createCategoryName(NameType value) {
        return new JAXBElement<NameType>(_CategoryName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "Variable")
    public JAXBElement<VariableType> createVariable(VariableType value) {
        return new JAXBElement<VariableType>(_Variable_QNAME, VariableType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableUsedReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "VariableUsedReference")
    public JAXBElement<VariableUsedReferenceType> createVariableUsedReference(VariableUsedReferenceType value) {
        return new JAXBElement<VariableUsedReferenceType>(_VariableUsedReference_QNAME, VariableUsedReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataRelationshipType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "DataRelationship")
    public JAXBElement<DataRelationshipType> createDataRelationship(DataRelationshipType value) {
        return new JAXBElement<DataRelationshipType>(_DataRelationship_QNAME, DataRelationshipType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableValueReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "VariableValueReference")
    public JAXBElement<VariableValueReferenceType> createVariableValueReference(VariableValueReferenceType value) {
        return new JAXBElement<VariableValueReferenceType>(_VariableValueReference_QNAME, VariableValueReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "VariableDefinition")
    public JAXBElement<StructuredStringType> createVariableDefinition(StructuredStringType value) {
        return new JAXBElement<StructuredStringType>(_VariableDefinition_QNAME, StructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DimensionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "Dimension")
    public JAXBElement<DimensionType> createDimension(DimensionType value) {
        return new JAXBElement<DimensionType>(_Dimension_QNAME, DimensionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCubeGroupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "NCubeGroup")
    public JAXBElement<NCubeGroupType> createNCubeGroup(NCubeGroupType value) {
        return new JAXBElement<NCubeGroupType>(_NCubeGroup_QNAME, NCubeGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "CodingInstructionsReference")
    public JAXBElement<ReferenceType> createCodingInstructionsReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_CodingInstructionsReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BaseLogicalProductType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "BaseLogicalProduct")
    public JAXBElement<BaseLogicalProductType> createBaseLogicalProduct(BaseLogicalProductType value) {
        return new JAXBElement<BaseLogicalProductType>(_BaseLogicalProduct_QNAME, BaseLogicalProductType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CoordinateGroupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "CoordinateGroup")
    public JAXBElement<CoordinateGroupType> createCoordinateGroup(CoordinateGroupType value) {
        return new JAXBElement<CoordinateGroupType>(_CoordinateGroup_QNAME, CoordinateGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DateTimeRepresentationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "DateTimeRepresentation", substitutionHeadNamespace = "ddi:logicalproduct:3_1", substitutionHeadName = "ValueRepresentation")
    public JAXBElement<DateTimeRepresentationType> createDateTimeRepresentation(DateTimeRepresentationType value) {
        return new JAXBElement<DateTimeRepresentationType>(_DateTimeRepresentation_QNAME, DateTimeRepresentationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "ComponentReference")
    public JAXBElement<ReferenceType> createComponentReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_ComponentReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IntervalType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "Interval")
    public JAXBElement<IntervalType> createInterval(IntervalType value) {
        return new JAXBElement<IntervalType>(_Interval_QNAME, IntervalType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HierarchyCodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "HierarchyType")
    public JAXBElement<HierarchyCodeType> createHierarchyType(HierarchyCodeType value) {
        return new JAXBElement<HierarchyCodeType>(_HierarchyType_QNAME, HierarchyCodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "Code")
    public JAXBElement<CodeType> createCode(CodeType value) {
        return new JAXBElement<CodeType>(_Code_QNAME, CodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IncludedCodeReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "IncludedCodeReference")
    public JAXBElement<IncludedCodeReferenceType> createIncludedCodeReference(IncludedCodeReferenceType value) {
        return new JAXBElement<IncludedCodeReferenceType>(_IncludedCodeReference_QNAME, IncludedCodeReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "CategoryGroupName")
    public JAXBElement<NameType> createCategoryGroupName(NameType value) {
        return new JAXBElement<NameType>(_CategoryGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RecordReferenceSourceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "RecordReferenceSource")
    public JAXBElement<RecordReferenceSourceType> createRecordReferenceSource(RecordReferenceSourceType value) {
        return new JAXBElement<RecordReferenceSourceType>(_RecordReferenceSource_QNAME, RecordReferenceSourceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AttributeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "Attribute")
    public JAXBElement<AttributeType> createAttribute(AttributeType value) {
        return new JAXBElement<AttributeType>(_Attribute_QNAME, AttributeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ddi.logicalproduct._3_1.RepresentationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "Representation")
    public JAXBElement<ddi.logicalproduct._3_1.RepresentationType> createRepresentation(ddi.logicalproduct._3_1.RepresentationType value) {
        return new JAXBElement<ddi.logicalproduct._3_1.RepresentationType>(_Representation_QNAME, ddi.logicalproduct._3_1.RepresentationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "StandardWeightReference")
    public JAXBElement<ReferenceType> createStandardWeightReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_StandardWeightReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CategoryType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "Category")
    public JAXBElement<CategoryType> createCategory(CategoryType value) {
        return new JAXBElement<CategoryType>(_Category_QNAME, CategoryType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "NCubeSchemeName")
    public JAXBElement<NameType> createNCubeSchemeName(NameType value) {
        return new JAXBElement<NameType>(_NCubeSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CategoryGroupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "CategoryGroup")
    public JAXBElement<CategoryGroupType> createCategoryGroup(CategoryGroupType value) {
        return new JAXBElement<CategoryGroupType>(_CategoryGroup_QNAME, CategoryGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SchemeReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "CategorySchemeReference")
    public JAXBElement<SchemeReferenceType> createCategorySchemeReference(SchemeReferenceType value) {
        return new JAXBElement<SchemeReferenceType>(_CategorySchemeReference_QNAME, SchemeReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "NCubeGroupReference")
    public JAXBElement<ReferenceType> createNCubeGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_NCubeGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GroupTypeCodedType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "GroupTypeCoded", substitutionHeadNamespace = "ddi:logicalproduct:3_1", substitutionHeadName = "GroupType")
    public JAXBElement<GroupTypeCodedType> createGroupTypeCoded(GroupTypeCodedType value) {
        return new JAXBElement<GroupTypeCodedType>(_GroupTypeCoded_QNAME, GroupTypeCodedType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ddi.reusable._3_1.RepresentationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "ValueRepresentation")
    public JAXBElement<ddi.reusable._3_1.RepresentationType> createValueRepresentation(ddi.reusable._3_1.RepresentationType value) {
        return new JAXBElement<ddi.reusable._3_1.RepresentationType>(_ValueRepresentation_QNAME, ddi.reusable._3_1.RepresentationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CohortType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "DimensionValue")
    public JAXBElement<CohortType> createDimensionValue(CohortType value) {
        return new JAXBElement<CohortType>(_DimensionValue_QNAME, CohortType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CategorySchemeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "CategoryScheme")
    public JAXBElement<CategorySchemeType> createCategoryScheme(CategorySchemeType value) {
        return new JAXBElement<CategorySchemeType>(_CategoryScheme_QNAME, CategorySchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "Value")
    public JAXBElement<ValueType> createValue(ValueType value) {
        return new JAXBElement<ValueType>(_Value_QNAME, ValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariablesInRecordType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "VariablesInRecord")
    public JAXBElement<VariablesInRecordType> createVariablesInRecord(VariablesInRecordType value) {
        return new JAXBElement<VariablesInRecordType>(_VariablesInRecord_QNAME, VariablesInRecordType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "NCubeGroupName")
    public JAXBElement<NameType> createNCubeGroupName(NameType value) {
        return new JAXBElement<NameType>(_NCubeGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeRepresentationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "CodeRepresentation", substitutionHeadNamespace = "ddi:logicalproduct:3_1", substitutionHeadName = "ValueRepresentation")
    public JAXBElement<CodeRepresentationType> createCodeRepresentation(CodeRepresentationType value) {
        return new JAXBElement<CodeRepresentationType>(_CodeRepresentation_QNAME, CodeRepresentationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "LogicalProductName")
    public JAXBElement<NameType> createLogicalProductName(NameType value) {
        return new JAXBElement<NameType>(_LogicalProductName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "ConceptReference")
    public JAXBElement<ReferenceType> createConceptReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_ConceptReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "Definition")
    public JAXBElement<StructuredStringType> createDefinition(StructuredStringType value) {
        return new JAXBElement<StructuredStringType>(_Definition_QNAME, StructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "DataRelationshipName")
    public JAXBElement<NameType> createDataRelationshipName(NameType value) {
        return new JAXBElement<NameType>(_DataRelationshipName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AttachmentLevelCodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "AttachmentLevel")
    public JAXBElement<AttachmentLevelCodeType> createAttachmentLevel(AttachmentLevelCodeType value) {
        return new JAXBElement<AttachmentLevelCodeType>(_AttachmentLevel_QNAME, AttachmentLevelCodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "ImputationReference")
    public JAXBElement<ReferenceType> createImputationReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_ImputationReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "CategoryReference")
    public JAXBElement<ReferenceType> createCategoryReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_CategoryReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LevelType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "Level")
    public JAXBElement<LevelType> createLevel(LevelType value) {
        return new JAXBElement<LevelType>(_Level_QNAME, LevelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TextRepresentationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "TextRepresentation", substitutionHeadNamespace = "ddi:logicalproduct:3_1", substitutionHeadName = "ValueRepresentation")
    public JAXBElement<TextRepresentationType> createTextRepresentation(TextRepresentationType value) {
        return new JAXBElement<TextRepresentationType>(_TextRepresentation_QNAME, TextRepresentationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "VariableGroupName")
    public JAXBElement<NameType> createVariableGroupName(NameType value) {
        return new JAXBElement<NameType>(_VariableGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "CodeSchemeName")
    public JAXBElement<NameType> createCodeSchemeName(NameType value) {
        return new JAXBElement<NameType>(_CodeSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConcatenatedValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "ConcatenatedValue")
    public JAXBElement<ConcatenatedValueType> createConcatenatedValue(ConcatenatedValueType value) {
        return new JAXBElement<ConcatenatedValueType>(_ConcatenatedValue_QNAME, ConcatenatedValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RecordRelationshipType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "RecordRelationship")
    public JAXBElement<RecordRelationshipType> createRecordRelationship(RecordRelationshipType value) {
        return new JAXBElement<RecordRelationshipType>(_RecordRelationship_QNAME, RecordRelationshipType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "VariableSchemeName")
    public JAXBElement<NameType> createVariableSchemeName(NameType value) {
        return new JAXBElement<NameType>(_VariableSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicalRecordType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "LogicalRecord")
    public JAXBElement<LogicalRecordType> createLogicalRecord(LogicalRecordType value) {
        return new JAXBElement<LogicalRecordType>(_LogicalRecord_QNAME, LogicalRecordType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "CategorySchemeName")
    public JAXBElement<NameType> createCategorySchemeName(NameType value) {
        return new JAXBElement<NameType>(_CategorySchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicalProductType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "LogicalProduct", substitutionHeadNamespace = "ddi:logicalproduct:3_1", substitutionHeadName = "BaseLogicalProduct")
    public JAXBElement<LogicalProductType> createLogicalProduct(LogicalProductType value) {
        return new JAXBElement<LogicalProductType>(_LogicalProduct_QNAME, LogicalProductType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MeasureType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "Measure")
    public JAXBElement<MeasureType> createMeasure(MeasureType value) {
        return new JAXBElement<MeasureType>(_Measure_QNAME, MeasureType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RangeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "Range")
    public JAXBElement<RangeType> createRange(RangeType value) {
        return new JAXBElement<RangeType>(_Range_QNAME, RangeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableConcatenationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "VariableConcatenation")
    public JAXBElement<VariableConcatenationType> createVariableConcatenation(VariableConcatenationType value) {
        return new JAXBElement<VariableConcatenationType>(_VariableConcatenation_QNAME, VariableConcatenationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeSchemeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "CodeScheme")
    public JAXBElement<CodeSchemeType> createCodeScheme(CodeSchemeType value) {
        return new JAXBElement<CodeSchemeType>(_CodeScheme_QNAME, CodeSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeSchemeReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "CodeSchemeReference")
    public JAXBElement<CodeSchemeReferenceType> createCodeSchemeReference(CodeSchemeReferenceType value) {
        return new JAXBElement<CodeSchemeReferenceType>(_CodeSchemeReference_QNAME, CodeSchemeReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "GroupType")
    public JAXBElement<CodeValueType> createGroupType(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_GroupType_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "VariableReference")
    public JAXBElement<ReferenceType> createVariableReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_VariableReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "QuestionReference")
    public JAXBElement<ReferenceType> createQuestionReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_QuestionReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "NCubeReference")
    public JAXBElement<ReferenceType> createNCubeReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_NCubeReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InternationalStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "Purpose")
    public JAXBElement<InternationalStringType> createPurpose(InternationalStringType value) {
        return new JAXBElement<InternationalStringType>(_Purpose_QNAME, InternationalStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CaseIdentificationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "CaseIdentification")
    public JAXBElement<CaseIdentificationType> createCaseIdentification(CaseIdentificationType value) {
        return new JAXBElement<CaseIdentificationType>(_CaseIdentification_QNAME, CaseIdentificationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "VariableName")
    public JAXBElement<NameType> createVariableName(NameType value) {
        return new JAXBElement<NameType>(_VariableName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "RecordReferenceTarget")
    public JAXBElement<ReferenceType> createRecordReferenceTarget(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_RecordReferenceTarget_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SchemeReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "VariableSchemeReference")
    public JAXBElement<SchemeReferenceType> createVariableSchemeReference(SchemeReferenceType value) {
        return new JAXBElement<SchemeReferenceType>(_VariableSchemeReference_QNAME, SchemeReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GenerationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "Generation")
    public JAXBElement<GenerationType> createGeneration(GenerationType value) {
        return new JAXBElement<GenerationType>(_Generation_QNAME, GenerationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AggregationDefinitionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "AggregationDefinition")
    public JAXBElement<AggregationDefinitionType> createAggregationDefinition(AggregationDefinitionType value) {
        return new JAXBElement<AggregationDefinitionType>(_AggregationDefinition_QNAME, AggregationDefinitionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCubesInRecordType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "NCubesInRecord")
    public JAXBElement<NCubesInRecordType> createNCubesInRecord(NCubesInRecordType value) {
        return new JAXBElement<NCubesInRecordType>(_NCubesInRecord_QNAME, NCubesInRecordType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CategoryRelationCodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "RelationshipType")
    public JAXBElement<CategoryRelationCodeType> createRelationshipType(CategoryRelationCodeType value) {
        return new JAXBElement<CategoryRelationCodeType>(_RelationshipType_QNAME, CategoryRelationCodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExternalCategoryRepresentationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "ExternalCategoryRepresentation", substitutionHeadNamespace = "ddi:logicalproduct:3_1", substitutionHeadName = "ValueRepresentation")
    public JAXBElement<ExternalCategoryRepresentationType> createExternalCategoryRepresentation(ExternalCategoryRepresentationType value) {
        return new JAXBElement<ExternalCategoryRepresentationType>(_ExternalCategoryRepresentation_QNAME, ExternalCategoryRepresentationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "LogicalRecordName")
    public JAXBElement<NameType> createLogicalRecordName(NameType value) {
        return new JAXBElement<NameType>(_LogicalRecordName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableValueReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "SupportForMultipleSegments")
    public JAXBElement<VariableValueReferenceType> createSupportForMultipleSegments(VariableValueReferenceType value) {
        return new JAXBElement<VariableValueReferenceType>(_SupportForMultipleSegments_QNAME, VariableValueReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CaseSpecificationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "CaseSpecification")
    public JAXBElement<CaseSpecificationType> createCaseSpecification(CaseSpecificationType value) {
        return new JAXBElement<CaseSpecificationType>(_CaseSpecification_QNAME, CaseSpecificationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "WeightVariableReference")
    public JAXBElement<ReferenceType> createWeightVariableReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_WeightVariableReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCubeLogicalProductType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "NCubeLogicalProduct", substitutionHeadNamespace = "ddi:logicalproduct:3_1", substitutionHeadName = "BaseLogicalProduct")
    public JAXBElement<NCubeLogicalProductType> createNCubeLogicalProduct(NCubeLogicalProductType value) {
        return new JAXBElement<NCubeLogicalProductType>(_NCubeLogicalProduct_QNAME, NCubeLogicalProductType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NumericRepresentationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_1", name = "NumericRepresentation", substitutionHeadNamespace = "ddi:logicalproduct:3_1", substitutionHeadName = "ValueRepresentation")
    public JAXBElement<NumericRepresentationType> createNumericRepresentation(NumericRepresentationType value) {
        return new JAXBElement<NumericRepresentationType>(_NumericRepresentation_QNAME, NumericRepresentationType.class, null, value);
    }

}
