//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.logicalproduct._3_1;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import ddi.reusable._3_1.CodeValueType;
import ddi.reusable._3_1.InternationalStringType;
import ddi.reusable._3_1.LabelType;
import ddi.reusable._3_1.NameType;
import ddi.reusable._3_1.ReferenceType;
import ddi.reusable._3_1.StructuredStringType;
import ddi.reusable._3_1.VersionableType;


/**
 * Describes the structure of the NCube.
 * 
 * <p>Java class for NCubeType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="NCubeType">
 *   &lt;complexContent>
 *     &lt;extension base="{ddi:reusable:3_1}VersionableType">
 *       &lt;sequence>
 *         &lt;element ref="{ddi:logicalproduct:3_1}NCubeName" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Label" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Description" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}UniverseReference" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:logicalproduct:3_1}ImputationReference" minOccurs="0"/>
 *         &lt;element name="ResponseUnit" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}AnalysisUnit" minOccurs="0"/>
 *         &lt;element ref="{ddi:logicalproduct:3_1}Purpose" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:logicalproduct:3_1}Dimension" maxOccurs="unbounded"/>
 *         &lt;element ref="{ddi:logicalproduct:3_1}CoordinateGroup" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:logicalproduct:3_1}Measure" maxOccurs="unbounded"/>
 *         &lt;element ref="{ddi:logicalproduct:3_1}Attribute" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="dimensionCount" use="required" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="cellCount" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="isClean" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "NCubeType", propOrder = {
    "nCubeName",
    "label",
    "description",
    "universeReference",
    "imputationReference",
    "responseUnit",
    "analysisUnit",
    "purpose",
    "dimension",
    "coordinateGroup",
    "measure",
    "attribute"
})
public class NCubeType
    extends VersionableType
{

    @XmlElement(name = "NCubeName")
    protected List<NameType> nCubeName;
    @XmlElement(name = "Label", namespace = "ddi:reusable:3_1")
    protected List<LabelType> label;
    @XmlElement(name = "Description", namespace = "ddi:reusable:3_1")
    protected List<StructuredStringType> description;
    @XmlElement(name = "UniverseReference", namespace = "ddi:reusable:3_1")
    protected List<ReferenceType> universeReference;
    @XmlElement(name = "ImputationReference")
    protected ReferenceType imputationReference;
    @XmlElement(name = "ResponseUnit")
    protected String responseUnit;
    @XmlElement(name = "AnalysisUnit", namespace = "ddi:reusable:3_1")
    protected CodeValueType analysisUnit;
    @XmlElement(name = "Purpose")
    protected List<InternationalStringType> purpose;
    @XmlElement(name = "Dimension", required = true)
    protected List<DimensionType> dimension;
    @XmlElement(name = "CoordinateGroup")
    protected List<CoordinateGroupType> coordinateGroup;
    @XmlElement(name = "Measure", required = true)
    protected List<MeasureType> measure;
    @XmlElement(name = "Attribute")
    protected List<AttributeType> attribute;
    @XmlAttribute(name = "dimensionCount", required = true)
    protected BigInteger dimensionCount;
    @XmlAttribute(name = "cellCount")
    protected BigInteger cellCount;
    @XmlAttribute(name = "isClean")
    protected Boolean isClean;

    /**
     * Gets the value of the nCubeName property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nCubeName property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNCubeName().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     * 
     * 
     */
    public List<NameType> getNCubeName() {
        if (nCubeName == null) {
            nCubeName = new ArrayList<NameType>();
        }
        return this.nCubeName;
    }

    /**
     * A display label for the NCube.Gets the value of the label property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     * 
     * 
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * Additional textual descriptions of the variable.Gets the value of the description property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the description property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDescription().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StructuredStringType }
     * 
     * 
     */
    public List<StructuredStringType> getDescription() {
        if (description == null) {
            description = new ArrayList<StructuredStringType>();
        }
        return this.description;
    }

    /**
     * Reference to the description of the persons or other elements that are the object of the research and to which any analytic results refer.Gets the value of the universeReference property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the universeReference property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUniverseReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ReferenceType }
     * 
     * 
     */
    public List<ReferenceType> getUniverseReference() {
        if (universeReference == null) {
            universeReference = new ArrayList<ReferenceType>();
        }
        return this.universeReference;
    }

    /**
     * Reference to the imputation process described in the Data Processing section
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getImputationReference() {
        return imputationReference;
    }

    /**
     * Sets the value of the imputationReference property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setImputationReference(ReferenceType value) {
        this.imputationReference = value;
    }

    /**
     * Gets the value of the responseUnit property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getResponseUnit() {
        return responseUnit;
    }

    /**
     * Sets the value of the responseUnit property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setResponseUnit(String value) {
        this.responseUnit = value;
    }

    /**
     * Provides information regarding whom or what the nCube describes.
     * 
     * @return
     *     possible object is
     *     {@link CodeValueType }
     *     
     */
    public CodeValueType getAnalysisUnit() {
        return analysisUnit;
    }

    /**
     * Sets the value of the analysisUnit property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeValueType }
     *     
     */
    public void setAnalysisUnit(CodeValueType value) {
        this.analysisUnit = value;
    }

    /**
     * Purpose for which the nCube was created.Gets the value of the purpose property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the purpose property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPurpose().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InternationalStringType }
     * 
     * 
     */
    public List<InternationalStringType> getPurpose() {
        if (purpose == null) {
            purpose = new ArrayList<InternationalStringType>();
        }
        return this.purpose;
    }

    /**
     * Defines a variable as a dimension of the nCube, and should be repeated to describe each of the nCube's dimensions.Gets the value of the dimension property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dimension property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDimension().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DimensionType }
     * 
     * 
     */
    public List<DimensionType> getDimension() {
        if (dimension == null) {
            dimension = new ArrayList<DimensionType>();
        }
        return this.dimension;
    }

    /**
     * Defines groups of dimensions (given particular values) to which attributes can be attached.Gets the value of the coordinateGroup property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the coordinateGroup property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCoordinateGroup().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CoordinateGroupType }
     * 
     * 
     */
    public List<CoordinateGroupType> getCoordinateGroup() {
        if (coordinateGroup == null) {
            coordinateGroup = new ArrayList<CoordinateGroupType>();
        }
        return this.coordinateGroup;
    }

    /**
     * The measurement features of the cell content (repeatable only for regularly bundled arrays of cell content).Gets the value of the measure property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the measure property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMeasure().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MeasureType }
     * 
     * 
     */
    public List<MeasureType> getMeasure() {
        if (measure == null) {
            measure = new ArrayList<MeasureType>();
        }
        return this.measure;
    }

    /**
     * Defines a variable that describes an attribute of all or coordinate sections of the NCube.Gets the value of the attribute property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the attribute property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAttribute().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AttributeType }
     * 
     * 
     */
    public List<AttributeType> getAttribute() {
        if (attribute == null) {
            attribute = new ArrayList<AttributeType>();
        }
        return this.attribute;
    }

    /**
     * Gets the value of the dimensionCount property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getDimensionCount() {
        return dimensionCount;
    }

    /**
     * Sets the value of the dimensionCount property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setDimensionCount(BigInteger value) {
        this.dimensionCount = value;
    }

    /**
     * Gets the value of the cellCount property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getCellCount() {
        return cellCount;
    }

    /**
     * Sets the value of the cellCount property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setCellCount(BigInteger value) {
        this.cellCount = value;
    }

    /**
     * Gets the value of the isClean property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isIsClean() {
        if (isClean == null) {
            return true;
        } else {
            return isClean;
        }
    }

    /**
     * Sets the value of the isClean property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsClean(Boolean value) {
        this.isClean = value;
    }

}
