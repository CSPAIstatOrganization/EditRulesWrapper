//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.logicalproduct._3_1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AggregationMethodCodeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AggregationMethodCodeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *     &lt;enumeration value="Sum"/>
 *     &lt;enumeration value="Average"/>
 *     &lt;enumeration value="Count"/>
 *     &lt;enumeration value="Mode"/>
 *     &lt;enumeration value="Median"/>
 *     &lt;enumeration value="Maximum"/>
 *     &lt;enumeration value="Minimum"/>
 *     &lt;enumeration value="Percent"/>
 *     &lt;enumeration value="CumulativePercent"/>
 *     &lt;enumeration value="PercentileRank"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "AggregationMethodCodeType")
@XmlEnum
public enum AggregationMethodCodeType {


    /**
     * Sum
     * 
     */
    @XmlEnumValue("Sum")
    SUM("Sum"),

    /**
     * Average
     * 
     */
    @XmlEnumValue("Average")
    AVERAGE("Average"),

    /**
     * Count
     * 
     */
    @XmlEnumValue("Count")
    COUNT("Count"),

    /**
     * Mode
     * 
     */
    @XmlEnumValue("Mode")
    MODE("Mode"),

    /**
     * Median
     * 
     */
    @XmlEnumValue("Median")
    MEDIAN("Median"),

    /**
     * Maximum
     * 
     */
    @XmlEnumValue("Maximum")
    MAXIMUM("Maximum"),

    /**
     * Minimum
     * 
     */
    @XmlEnumValue("Minimum")
    MINIMUM("Minimum"),

    /**
     * Percent (Percentages are used to express how large one quantity is relative to another quantity)
     * 
     */
    @XmlEnumValue("Percent")
    PERCENT("Percent"),

    /**
     * Cumulative percent (percentage of items in its frequency distribution which are equal to or lower than the current item [maximum value is 100%])
     * 
     */
    @XmlEnumValue("CumulativePercent")
    CUMULATIVE_PERCENT("CumulativePercent"),

    /**
     * Percentile rank (The percentile rank of a item is the percentage of items in its frequency distribution which are lower [cannot reach 100%])
     * 
     */
    @XmlEnumValue("PercentileRank")
    PERCENTILE_RANK("PercentileRank");
    private final String value;

    AggregationMethodCodeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AggregationMethodCodeType fromValue(String v) {
        for (AggregationMethodCodeType c: AggregationMethodCodeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
