//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.datacollection._3_1;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import ddi.reusable._3_1.IdentifiableType;


/**
 * A structure for the description of the computation used in the data collection or data processing such as recoding, derivations, or incorporation of external data sources.
 * 
 * <p>Java class for CodingType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CodingType">
 *   &lt;complexContent>
 *     &lt;extension base="{ddi:reusable:3_1}IdentifiableType">
 *       &lt;sequence>
 *         &lt;choice>
 *           &lt;element ref="{ddi:datacollection:3_1}GeneralInstruction"/>
 *           &lt;element ref="{ddi:datacollection:3_1}GenerationInstruction"/>
 *           &lt;element name="StandardWeight" type="{http://www.w3.org/2001/XMLSchema}float"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CodingType", propOrder = {
    "generalInstruction",
    "generationInstruction",
    "standardWeight"
})
public class CodingType
    extends IdentifiableType
{

    @XmlElement(name = "GeneralInstruction")
    protected GeneralInstructionType generalInstruction;
    @XmlElement(name = "GenerationInstruction")
    protected GenerationInstructionType generationInstruction;
    @XmlElement(name = "StandardWeight")
    protected Float standardWeight;

    /**
     * Coding instructions that pertain to data collection or data processing overall such as handling of non-response to questions, imputation practices, suppression rules, etc. Coding instructions should be listed separately to allow for referencing of specific processes.
     * 
     * @return
     *     possible object is
     *     {@link GeneralInstructionType }
     *     
     */
    public GeneralInstructionType getGeneralInstruction() {
        return generalInstruction;
    }

    /**
     * Sets the value of the generalInstruction property.
     * 
     * @param value
     *     allowed object is
     *     {@link GeneralInstructionType }
     *     
     */
    public void setGeneralInstruction(GeneralInstructionType value) {
        this.generalInstruction = value;
    }

    /**
     * Instructions for recodes, derivations from multiple question or variable sources, and derivations based on external sources. Instructions should be listed separately so they can be referenced by variables in the logical product.
     * 
     * @return
     *     possible object is
     *     {@link GenerationInstructionType }
     *     
     */
    public GenerationInstructionType getGenerationInstruction() {
        return generationInstruction;
    }

    /**
     * Sets the value of the generationInstruction property.
     * 
     * @param value
     *     allowed object is
     *     {@link GenerationInstructionType }
     *     
     */
    public void setGenerationInstruction(GenerationInstructionType value) {
        this.generationInstruction = value;
    }

    /**
     * Gets the value of the standardWeight property.
     * 
     * @return
     *     possible object is
     *     {@link Float }
     *     
     */
    public Float getStandardWeight() {
        return standardWeight;
    }

    /**
     * Sets the value of the standardWeight property.
     * 
     * @param value
     *     allowed object is
     *     {@link Float }
     *     
     */
    public void setStandardWeight(Float value) {
        this.standardWeight = value;
    }

}
