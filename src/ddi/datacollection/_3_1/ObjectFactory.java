//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.datacollection._3_1;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;
import ddi.reusable._3_1.CodeType;
import ddi.reusable._3_1.CodeValueType;
import ddi.reusable._3_1.CommandType;
import ddi.reusable._3_1.DateType;
import ddi.reusable._3_1.IdentifiedStructuredStringType;
import ddi.reusable._3_1.InternationalStringType;
import ddi.reusable._3_1.NameType;
import ddi.reusable._3_1.OtherMaterialType;
import ddi.reusable._3_1.ReferenceType;
import ddi.reusable._3_1.RepresentationType;
import ddi.reusable._3_1.SchemeReferenceType;
import ddi.reusable._3_1.StructuredStringType;
import ddi.reusable._3_1.TextDomainType;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ddi.datacollection._3_1 package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _ResponseDomain_QNAME = new QName("ddi:datacollection:3_1", "ResponseDomain");
    private final static QName _LoopWhile_QNAME = new QName("ddi:datacollection:3_1", "LoopWhile");
    private final static QName _ElseConstructReference_QNAME = new QName("ddi:datacollection:3_1", "ElseConstructReference");
    private final static QName _Expression_QNAME = new QName("ddi:datacollection:3_1", "Expression");
    private final static QName _UntilConstructReference_QNAME = new QName("ddi:datacollection:3_1", "UntilConstructReference");
    private final static QName _QuestionReference_QNAME = new QName("ddi:datacollection:3_1", "QuestionReference");
    private final static QName _VariableSet_QNAME = new QName("ddi:datacollection:3_1", "VariableSet");
    private final static QName _DateTimeDomain_QNAME = new QName("ddi:datacollection:3_1", "DateTimeDomain");
    private final static QName _QuestionSchemeName_QNAME = new QName("ddi:datacollection:3_1", "QuestionSchemeName");
    private final static QName _DataCollectionModuleName_QNAME = new QName("ddi:datacollection:3_1", "DataCollectionModuleName");
    private final static QName _RepeatUntil_QNAME = new QName("ddi:datacollection:3_1", "RepeatUntil");
    private final static QName _IfCondition_QNAME = new QName("ddi:datacollection:3_1", "IfCondition");
    private final static QName _Characteristic_QNAME = new QName("ddi:datacollection:3_1", "Characteristic");
    private final static QName _ResponseText_QNAME = new QName("ddi:datacollection:3_1", "ResponseText");
    private final static QName _SubQuestions_QNAME = new QName("ddi:datacollection:3_1", "SubQuestions");
    private final static QName _SourceQuestion_QNAME = new QName("ddi:datacollection:3_1", "SourceQuestion");
    private final static QName _AssociatedItems_QNAME = new QName("ddi:datacollection:3_1", "AssociatedItems");
    private final static QName _IsOverride_QNAME = new QName("ddi:datacollection:3_1", "IsOverride");
    private final static QName _ElseIf_QNAME = new QName("ddi:datacollection:3_1", "ElseIf");
    private final static QName _LoopVariableReference_QNAME = new QName("ddi:datacollection:3_1", "LoopVariableReference");
    private final static QName _RepeatWhile_QNAME = new QName("ddi:datacollection:3_1", "RepeatWhile");
    private final static QName _UntilCondition_QNAME = new QName("ddi:datacollection:3_1", "UntilCondition");
    private final static QName _MultipleQuestionItemName_QNAME = new QName("ddi:datacollection:3_1", "MultipleQuestionItemName");
    private final static QName _StructuredMixedResponseDomain_QNAME = new QName("ddi:datacollection:3_1", "StructuredMixedResponseDomain");
    private final static QName _TextDomain_QNAME = new QName("ddi:datacollection:3_1", "TextDomain");
    private final static QName _ControlConstruct_QNAME = new QName("ddi:datacollection:3_1", "ControlConstruct");
    private final static QName _Sequence_QNAME = new QName("ddi:datacollection:3_1", "Sequence");
    private final static QName _DataCollectionMethodology_QNAME = new QName("ddi:datacollection:3_1", "DataCollectionMethodology");
    private final static QName _ConditionalText_QNAME = new QName("ddi:datacollection:3_1", "ConditionalText");
    private final static QName _ExternalAid_QNAME = new QName("ddi:datacollection:3_1", "ExternalAid");
    private final static QName _DeviationFromSampleDesign_QNAME = new QName("ddi:datacollection:3_1", "DeviationFromSampleDesign");
    private final static QName _ActionToMinimizeLosses_QNAME = new QName("ddi:datacollection:3_1", "ActionToMinimizeLosses");
    private final static QName _SourceVariable_QNAME = new QName("ddi:datacollection:3_1", "SourceVariable");
    private final static QName _DependentVariableReference_QNAME = new QName("ddi:datacollection:3_1", "DependentVariableReference");
    private final static QName _ConceptReference_QNAME = new QName("ddi:datacollection:3_1", "ConceptReference");
    private final static QName _ControlConstructScheme_QNAME = new QName("ddi:datacollection:3_1", "ControlConstructScheme");
    private final static QName _CollectionSituation_QNAME = new QName("ddi:datacollection:3_1", "CollectionSituation");
    private final static QName _InterviewerInstructionSchemeName_QNAME = new QName("ddi:datacollection:3_1", "InterviewerInstructionSchemeName");
    private final static QName _Aggregation_QNAME = new QName("ddi:datacollection:3_1", "Aggregation");
    private final static QName _ProcessingEvent_QNAME = new QName("ddi:datacollection:3_1", "ProcessingEvent");
    private final static QName _QuestionScheme_QNAME = new QName("ddi:datacollection:3_1", "QuestionScheme");
    private final static QName _ControlConstructReference_QNAME = new QName("ddi:datacollection:3_1", "ControlConstructReference");
    private final static QName _MultipleQuestionItem_QNAME = new QName("ddi:datacollection:3_1", "MultipleQuestionItem");
    private final static QName _Weighting_QNAME = new QName("ddi:datacollection:3_1", "Weighting");
    private final static QName _Method_QNAME = new QName("ddi:datacollection:3_1", "Method");
    private final static QName _InterviewerInstructionScheme_QNAME = new QName("ddi:datacollection:3_1", "InterviewerInstructionScheme");
    private final static QName _Methodology_QNAME = new QName("ddi:datacollection:3_1", "Methodology");
    private final static QName _Type_QNAME = new QName("ddi:datacollection:3_1", "Type");
    private final static QName _DataAppraisalInformation_QNAME = new QName("ddi:datacollection:3_1", "DataAppraisalInformation");
    private final static QName _GeneralInstruction_QNAME = new QName("ddi:datacollection:3_1", "GeneralInstruction");
    private final static QName _StatementItem_QNAME = new QName("ddi:datacollection:3_1", "StatementItem");
    private final static QName _Instrument_QNAME = new QName("ddi:datacollection:3_1", "Instrument");
    private final static QName _ExternalInterviewerInstructionReference_QNAME = new QName("ddi:datacollection:3_1", "ExternalInterviewerInstructionReference");
    private final static QName _DisplayText_QNAME = new QName("ddi:datacollection:3_1", "DisplayText");
    private final static QName _InstrumentName_QNAME = new QName("ddi:datacollection:3_1", "InstrumentName");
    private final static QName _AgencyOrganizationReference_QNAME = new QName("ddi:datacollection:3_1", "AgencyOrganizationReference");
    private final static QName _GenerationInstruction_QNAME = new QName("ddi:datacollection:3_1", "GenerationInstruction");
    private final static QName _AlternateSequenceType_QNAME = new QName("ddi:datacollection:3_1", "AlternateSequenceType");
    private final static QName _IfThenElse_QNAME = new QName("ddi:datacollection:3_1", "IfThenElse");
    private final static QName _QuestionSchemeReference_QNAME = new QName("ddi:datacollection:3_1", "QuestionSchemeReference");
    private final static QName _InstructionName_QNAME = new QName("ddi:datacollection:3_1", "InstructionName");
    private final static QName _WhileConstructReference_QNAME = new QName("ddi:datacollection:3_1", "WhileConstructReference");
    private final static QName _CategoryDomain_QNAME = new QName("ddi:datacollection:3_1", "CategoryDomain");
    private final static QName _ControlConstructSchemeReference_QNAME = new QName("ddi:datacollection:3_1", "ControlConstructSchemeReference");
    private final static QName _IndependentVariableReference_QNAME = new QName("ddi:datacollection:3_1", "IndependentVariableReference");
    private final static QName _ExternalInformation_QNAME = new QName("ddi:datacollection:3_1", "ExternalInformation");
    private final static QName _Code_QNAME = new QName("ddi:datacollection:3_1", "Code");
    private final static QName _StepValue_QNAME = new QName("ddi:datacollection:3_1", "StepValue");
    private final static QName _Label_QNAME = new QName("ddi:datacollection:3_1", "Label");
    private final static QName _LiteralText_QNAME = new QName("ddi:datacollection:3_1", "LiteralText");
    private final static QName _SamplingProcedure_QNAME = new QName("ddi:datacollection:3_1", "SamplingProcedure");
    private final static QName _NumericDomain_QNAME = new QName("ddi:datacollection:3_1", "NumericDomain");
    private final static QName _QuestionText_QNAME = new QName("ddi:datacollection:3_1", "QuestionText");
    private final static QName _AssignedVariableReference_QNAME = new QName("ddi:datacollection:3_1", "AssignedVariableReference");
    private final static QName _DataCollectionDate_QNAME = new QName("ddi:datacollection:3_1", "DataCollectionDate");
    private final static QName _ThenConstructReference_QNAME = new QName("ddi:datacollection:3_1", "ThenConstructReference");
    private final static QName _Instruction_QNAME = new QName("ddi:datacollection:3_1", "Instruction");
    private final static QName _ControlOperation_QNAME = new QName("ddi:datacollection:3_1", "ControlOperation");
    private final static QName _OtherAppraisalProcess_QNAME = new QName("ddi:datacollection:3_1", "OtherAppraisalProcess");
    private final static QName _ResponseSequence_QNAME = new QName("ddi:datacollection:3_1", "ResponseSequence");
    private final static QName _ItemSequenceType_QNAME = new QName("ddi:datacollection:3_1", "ItemSequenceType");
    private final static QName _ComputationItem_QNAME = new QName("ddi:datacollection:3_1", "ComputationItem");
    private final static QName _QuestionItem_QNAME = new QName("ddi:datacollection:3_1", "QuestionItem");
    private final static QName _ResponseUnit_QNAME = new QName("ddi:datacollection:3_1", "ResponseUnit");
    private final static QName _DataCollectionFrequency_QNAME = new QName("ddi:datacollection:3_1", "DataCollectionFrequency");
    private final static QName _WhileCondition_QNAME = new QName("ddi:datacollection:3_1", "WhileCondition");
    private final static QName _ControlConstructSchemeName_QNAME = new QName("ddi:datacollection:3_1", "ControlConstructSchemeName");
    private final static QName _CleaningOperation_QNAME = new QName("ddi:datacollection:3_1", "CleaningOperation");
    private final static QName _DataCollectorOrganizationReference_QNAME = new QName("ddi:datacollection:3_1", "DataCollectorOrganizationReference");
    private final static QName _Loop_QNAME = new QName("ddi:datacollection:3_1", "Loop");
    private final static QName _ConstructName_QNAME = new QName("ddi:datacollection:3_1", "ConstructName");
    private final static QName _InterviewerInstructionSchemeReference_QNAME = new QName("ddi:datacollection:3_1", "InterviewerInstructionSchemeReference");
    private final static QName _ConstructSequence_QNAME = new QName("ddi:datacollection:3_1", "ConstructSequence");
    private final static QName _SubQuestionSequence_QNAME = new QName("ddi:datacollection:3_1", "SubQuestionSequence");
    private final static QName _VariableSetReference_QNAME = new QName("ddi:datacollection:3_1", "VariableSetReference");
    private final static QName _Origin_QNAME = new QName("ddi:datacollection:3_1", "Origin");
    private final static QName _SourceVariableReference_QNAME = new QName("ddi:datacollection:3_1", "SourceVariableReference");
    private final static QName _DataCollection_QNAME = new QName("ddi:datacollection:3_1", "DataCollection");
    private final static QName _Coding_QNAME = new QName("ddi:datacollection:3_1", "Coding");
    private final static QName _InterviewerInstructionReference_QNAME = new QName("ddi:datacollection:3_1", "InterviewerInstructionReference");
    private final static QName _DataSource_QNAME = new QName("ddi:datacollection:3_1", "DataSource");
    private final static QName _QuestionIntent_QNAME = new QName("ddi:datacollection:3_1", "QuestionIntent");
    private final static QName _QuestionConstruct_QNAME = new QName("ddi:datacollection:3_1", "QuestionConstruct");
    private final static QName _QuestionItemName_QNAME = new QName("ddi:datacollection:3_1", "QuestionItemName");
    private final static QName _Text_QNAME = new QName("ddi:datacollection:3_1", "Text");
    private final static QName _CollectionEvent_QNAME = new QName("ddi:datacollection:3_1", "CollectionEvent");
    private final static QName _SourceType_QNAME = new QName("ddi:datacollection:3_1", "SourceType");
    private final static QName _SourceDescription_QNAME = new QName("ddi:datacollection:3_1", "SourceDescription");
    private final static QName _GeographicDomain_QNAME = new QName("ddi:datacollection:3_1", "GeographicDomain");
    private final static QName _ModeOfCollection_QNAME = new QName("ddi:datacollection:3_1", "ModeOfCollection");
    private final static QName _TimeMethod_QNAME = new QName("ddi:datacollection:3_1", "TimeMethod");
    private final static QName _SamplingError_QNAME = new QName("ddi:datacollection:3_1", "SamplingError");
    private final static QName _CodeDomain_QNAME = new QName("ddi:datacollection:3_1", "CodeDomain");
    private final static QName _InitialValue_QNAME = new QName("ddi:datacollection:3_1", "InitialValue");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ddi.datacollection._3_1
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DynamicTextType }
     * 
     */
    public DynamicTextType createDynamicTextType() {
        return new DynamicTextType();
    }

    /**
     * Create an instance of {@link MultipleQuestionItemType }
     * 
     */
    public MultipleQuestionItemType createMultipleQuestionItemType() {
        return new MultipleQuestionItemType();
    }

    /**
     * Create an instance of {@link QuestionGroupType }
     * 
     */
    public QuestionGroupType createQuestionGroupType() {
        return new QuestionGroupType();
    }

    /**
     * Create an instance of {@link OriginType }
     * 
     */
    public OriginType createOriginType() {
        return new OriginType();
    }

    /**
     * Create an instance of {@link SpecificSequenceType }
     * 
     */
    public SpecificSequenceType createSpecificSequenceType() {
        return new SpecificSequenceType();
    }

    /**
     * Create an instance of {@link NumericDomainType }
     * 
     */
    public NumericDomainType createNumericDomainType() {
        return new NumericDomainType();
    }

    /**
     * Create an instance of {@link CodingType }
     * 
     */
    public CodingType createCodingType() {
        return new CodingType();
    }

    /**
     * Create an instance of {@link InterviewerInstructionSchemeType }
     * 
     */
    public InterviewerInstructionSchemeType createInterviewerInstructionSchemeType() {
        return new InterviewerInstructionSchemeType();
    }

    /**
     * Create an instance of {@link MethodologyType }
     * 
     */
    public MethodologyType createMethodologyType() {
        return new MethodologyType();
    }

    /**
     * Create an instance of {@link DataCollectionType }
     * 
     */
    public DataCollectionType createDataCollectionType() {
        return new DataCollectionType();
    }

    /**
     * Create an instance of {@link SourceReferenceType }
     * 
     */
    public SourceReferenceType createSourceReferenceType() {
        return new SourceReferenceType();
    }

    /**
     * Create an instance of {@link CategoryDomainType }
     * 
     */
    public CategoryDomainType createCategoryDomainType() {
        return new CategoryDomainType();
    }

    /**
     * Create an instance of {@link OperationType }
     * 
     */
    public OperationType createOperationType() {
        return new OperationType();
    }

    /**
     * Create an instance of {@link LiteralTextType }
     * 
     */
    public LiteralTextType createLiteralTextType() {
        return new LiteralTextType();
    }

    /**
     * Create an instance of {@link AggregationType }
     * 
     */
    public AggregationType createAggregationType() {
        return new AggregationType();
    }

    /**
     * Create an instance of {@link QuestionSchemeType }
     * 
     */
    public QuestionSchemeType createQuestionSchemeType() {
        return new QuestionSchemeType();
    }

    /**
     * Create an instance of {@link RepeatUntilType }
     * 
     */
    public RepeatUntilType createRepeatUntilType() {
        return new RepeatUntilType();
    }

    /**
     * Create an instance of {@link ProcessingType }
     * 
     */
    public ProcessingType createProcessingType() {
        return new ProcessingType();
    }

    /**
     * Create an instance of {@link VariableSetType }
     * 
     */
    public VariableSetType createVariableSetType() {
        return new VariableSetType();
    }

    /**
     * Create an instance of {@link ControlConstructSchemeType }
     * 
     */
    public ControlConstructSchemeType createControlConstructSchemeType() {
        return new ControlConstructSchemeType();
    }

    /**
     * Create an instance of {@link LoopType }
     * 
     */
    public LoopType createLoopType() {
        return new LoopType();
    }

    /**
     * Create an instance of {@link DateTimeDomainType }
     * 
     */
    public DateTimeDomainType createDateTimeDomainType() {
        return new DateTimeDomainType();
    }

    /**
     * Create an instance of {@link GenerationInstructionType }
     * 
     */
    public GenerationInstructionType createGenerationInstructionType() {
        return new GenerationInstructionType();
    }

    /**
     * Create an instance of {@link DataCollectionFrequencyType }
     * 
     */
    public DataCollectionFrequencyType createDataCollectionFrequencyType() {
        return new DataCollectionFrequencyType();
    }

    /**
     * Create an instance of {@link SequenceType }
     * 
     */
    public SequenceType createSequenceType() {
        return new SequenceType();
    }

    /**
     * Create an instance of {@link GeographicDomainType }
     * 
     */
    public GeographicDomainType createGeographicDomainType() {
        return new GeographicDomainType();
    }

    /**
     * Create an instance of {@link CodeDomainType }
     * 
     */
    public CodeDomainType createCodeDomainType() {
        return new CodeDomainType();
    }

    /**
     * Create an instance of {@link IfThenElseType }
     * 
     */
    public IfThenElseType createIfThenElseType() {
        return new IfThenElseType();
    }

    /**
     * Create an instance of {@link ConditionalTextType }
     * 
     */
    public ConditionalTextType createConditionalTextType() {
        return new ConditionalTextType();
    }

    /**
     * Create an instance of {@link QuestionConstructType }
     * 
     */
    public QuestionConstructType createQuestionConstructType() {
        return new QuestionConstructType();
    }

    /**
     * Create an instance of {@link RepeatWhileType }
     * 
     */
    public RepeatWhileType createRepeatWhileType() {
        return new RepeatWhileType();
    }

    /**
     * Create an instance of {@link InstructionType }
     * 
     */
    public InstructionType createInstructionType() {
        return new InstructionType();
    }

    /**
     * Create an instance of {@link InterviewerInstructionReferenceType }
     * 
     */
    public InterviewerInstructionReferenceType createInterviewerInstructionReferenceType() {
        return new InterviewerInstructionReferenceType();
    }

    /**
     * Create an instance of {@link DataSourceType }
     * 
     */
    public DataSourceType createDataSourceType() {
        return new DataSourceType();
    }

    /**
     * Create an instance of {@link ElseIfType }
     * 
     */
    public ElseIfType createElseIfType() {
        return new ElseIfType();
    }

    /**
     * Create an instance of {@link ComputationItemType }
     * 
     */
    public ComputationItemType createComputationItemType() {
        return new ComputationItemType();
    }

    /**
     * Create an instance of {@link ExternalInterviewerInstructionReferenceType }
     * 
     */
    public ExternalInterviewerInstructionReferenceType createExternalInterviewerInstructionReferenceType() {
        return new ExternalInterviewerInstructionReferenceType();
    }

    /**
     * Create an instance of {@link QuestionItemType }
     * 
     */
    public QuestionItemType createQuestionItemType() {
        return new QuestionItemType();
    }

    /**
     * Create an instance of {@link GeneralInstructionType }
     * 
     */
    public GeneralInstructionType createGeneralInstructionType() {
        return new GeneralInstructionType();
    }

    /**
     * Create an instance of {@link DataAppraisalInformationType }
     * 
     */
    public DataAppraisalInformationType createDataAppraisalInformationType() {
        return new DataAppraisalInformationType();
    }

    /**
     * Create an instance of {@link StructuredMixedResponseDomainType }
     * 
     */
    public StructuredMixedResponseDomainType createStructuredMixedResponseDomainType() {
        return new StructuredMixedResponseDomainType();
    }

    /**
     * Create an instance of {@link InstrumentType }
     * 
     */
    public InstrumentType createInstrumentType() {
        return new InstrumentType();
    }

    /**
     * Create an instance of {@link StatementItemType }
     * 
     */
    public StatementItemType createStatementItemType() {
        return new StatementItemType();
    }

    /**
     * Create an instance of {@link CollectionEventType }
     * 
     */
    public CollectionEventType createCollectionEventType() {
        return new CollectionEventType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RepresentationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ResponseDomain")
    public JAXBElement<RepresentationType> createResponseDomain(RepresentationType value) {
        return new JAXBElement<RepresentationType>(_ResponseDomain_QNAME, RepresentationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "LoopWhile")
    public JAXBElement<CodeType> createLoopWhile(CodeType value) {
        return new JAXBElement<CodeType>(_LoopWhile_QNAME, CodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ElseConstructReference")
    public JAXBElement<ReferenceType> createElseConstructReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_ElseConstructReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Expression")
    public JAXBElement<CodeType> createExpression(CodeType value) {
        return new JAXBElement<CodeType>(_Expression_QNAME, CodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "UntilConstructReference")
    public JAXBElement<ReferenceType> createUntilConstructReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_UntilConstructReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "QuestionReference")
    public JAXBElement<ReferenceType> createQuestionReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_QuestionReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableSetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "VariableSet")
    public JAXBElement<VariableSetType> createVariableSet(VariableSetType value) {
        return new JAXBElement<VariableSetType>(_VariableSet_QNAME, VariableSetType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DateTimeDomainType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "DateTimeDomain", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "ResponseDomain")
    public JAXBElement<DateTimeDomainType> createDateTimeDomain(DateTimeDomainType value) {
        return new JAXBElement<DateTimeDomainType>(_DateTimeDomain_QNAME, DateTimeDomainType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "QuestionSchemeName")
    public JAXBElement<NameType> createQuestionSchemeName(NameType value) {
        return new JAXBElement<NameType>(_QuestionSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "DataCollectionModuleName")
    public JAXBElement<NameType> createDataCollectionModuleName(NameType value) {
        return new JAXBElement<NameType>(_DataCollectionModuleName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RepeatUntilType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "RepeatUntil", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "ControlConstruct")
    public JAXBElement<RepeatUntilType> createRepeatUntil(RepeatUntilType value) {
        return new JAXBElement<RepeatUntilType>(_RepeatUntil_QNAME, RepeatUntilType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "IfCondition")
    public JAXBElement<CodeType> createIfCondition(CodeType value) {
        return new JAXBElement<CodeType>(_IfCondition_QNAME, CodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Characteristic")
    public JAXBElement<StructuredStringType> createCharacteristic(StructuredStringType value) {
        return new JAXBElement<StructuredStringType>(_Characteristic_QNAME, StructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DynamicTextType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ResponseText")
    public JAXBElement<DynamicTextType> createResponseText(DynamicTextType value) {
        return new JAXBElement<DynamicTextType>(_ResponseText_QNAME, DynamicTextType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link QuestionGroupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "SubQuestions")
    public JAXBElement<QuestionGroupType> createSubQuestions(QuestionGroupType value) {
        return new JAXBElement<QuestionGroupType>(_SubQuestions_QNAME, QuestionGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SourceReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "SourceQuestion")
    public JAXBElement<SourceReferenceType> createSourceQuestion(SourceReferenceType value) {
        return new JAXBElement<SourceReferenceType>(_SourceQuestion_QNAME, SourceReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link QuestionGroupType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "AssociatedItems")
    public JAXBElement<QuestionGroupType> createAssociatedItems(QuestionGroupType value) {
        return new JAXBElement<QuestionGroupType>(_AssociatedItems_QNAME, QuestionGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "IsOverride")
    public JAXBElement<ReferenceType> createIsOverride(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_IsOverride_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElseIfType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ElseIf")
    public JAXBElement<ElseIfType> createElseIf(ElseIfType value) {
        return new JAXBElement<ElseIfType>(_ElseIf_QNAME, ElseIfType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "LoopVariableReference")
    public JAXBElement<ReferenceType> createLoopVariableReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_LoopVariableReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RepeatWhileType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "RepeatWhile", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "ControlConstruct")
    public JAXBElement<RepeatWhileType> createRepeatWhile(RepeatWhileType value) {
        return new JAXBElement<RepeatWhileType>(_RepeatWhile_QNAME, RepeatWhileType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "UntilCondition")
    public JAXBElement<CodeType> createUntilCondition(CodeType value) {
        return new JAXBElement<CodeType>(_UntilCondition_QNAME, CodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "MultipleQuestionItemName")
    public JAXBElement<NameType> createMultipleQuestionItemName(NameType value) {
        return new JAXBElement<NameType>(_MultipleQuestionItemName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuredMixedResponseDomainType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "StructuredMixedResponseDomain")
    public JAXBElement<StructuredMixedResponseDomainType> createStructuredMixedResponseDomain(StructuredMixedResponseDomainType value) {
        return new JAXBElement<StructuredMixedResponseDomainType>(_StructuredMixedResponseDomain_QNAME, StructuredMixedResponseDomainType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TextDomainType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "TextDomain", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "ResponseDomain")
    public JAXBElement<TextDomainType> createTextDomain(TextDomainType value) {
        return new JAXBElement<TextDomainType>(_TextDomain_QNAME, TextDomainType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ControlConstructType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ControlConstruct")
    public JAXBElement<ControlConstructType> createControlConstruct(ControlConstructType value) {
        return new JAXBElement<ControlConstructType>(_ControlConstruct_QNAME, ControlConstructType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SequenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Sequence", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "ControlConstruct")
    public JAXBElement<SequenceType> createSequence(SequenceType value) {
        return new JAXBElement<SequenceType>(_Sequence_QNAME, SequenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IdentifiedStructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "DataCollectionMethodology")
    public JAXBElement<IdentifiedStructuredStringType> createDataCollectionMethodology(IdentifiedStructuredStringType value) {
        return new JAXBElement<IdentifiedStructuredStringType>(_DataCollectionMethodology_QNAME, IdentifiedStructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConditionalTextType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ConditionalText", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "Text")
    public JAXBElement<ConditionalTextType> createConditionalText(ConditionalTextType value) {
        return new JAXBElement<ConditionalTextType>(_ConditionalText_QNAME, ConditionalTextType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OtherMaterialType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ExternalAid")
    public JAXBElement<OtherMaterialType> createExternalAid(OtherMaterialType value) {
        return new JAXBElement<OtherMaterialType>(_ExternalAid_QNAME, OtherMaterialType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IdentifiedStructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "DeviationFromSampleDesign")
    public JAXBElement<IdentifiedStructuredStringType> createDeviationFromSampleDesign(IdentifiedStructuredStringType value) {
        return new JAXBElement<IdentifiedStructuredStringType>(_DeviationFromSampleDesign_QNAME, IdentifiedStructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IdentifiedStructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ActionToMinimizeLosses")
    public JAXBElement<IdentifiedStructuredStringType> createActionToMinimizeLosses(IdentifiedStructuredStringType value) {
        return new JAXBElement<IdentifiedStructuredStringType>(_ActionToMinimizeLosses_QNAME, IdentifiedStructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SourceReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "SourceVariable")
    public JAXBElement<SourceReferenceType> createSourceVariable(SourceReferenceType value) {
        return new JAXBElement<SourceReferenceType>(_SourceVariable_QNAME, SourceReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "DependentVariableReference")
    public JAXBElement<ReferenceType> createDependentVariableReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_DependentVariableReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ConceptReference")
    public JAXBElement<ReferenceType> createConceptReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_ConceptReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ControlConstructSchemeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ControlConstructScheme")
    public JAXBElement<ControlConstructSchemeType> createControlConstructScheme(ControlConstructSchemeType value) {
        return new JAXBElement<ControlConstructSchemeType>(_ControlConstructScheme_QNAME, ControlConstructSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IdentifiedStructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "CollectionSituation")
    public JAXBElement<IdentifiedStructuredStringType> createCollectionSituation(IdentifiedStructuredStringType value) {
        return new JAXBElement<IdentifiedStructuredStringType>(_CollectionSituation_QNAME, IdentifiedStructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "InterviewerInstructionSchemeName")
    public JAXBElement<NameType> createInterviewerInstructionSchemeName(NameType value) {
        return new JAXBElement<NameType>(_InterviewerInstructionSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AggregationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Aggregation")
    public JAXBElement<AggregationType> createAggregation(AggregationType value) {
        return new JAXBElement<AggregationType>(_Aggregation_QNAME, AggregationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessingType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ProcessingEvent")
    public JAXBElement<ProcessingType> createProcessingEvent(ProcessingType value) {
        return new JAXBElement<ProcessingType>(_ProcessingEvent_QNAME, ProcessingType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link QuestionSchemeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "QuestionScheme")
    public JAXBElement<QuestionSchemeType> createQuestionScheme(QuestionSchemeType value) {
        return new JAXBElement<QuestionSchemeType>(_QuestionScheme_QNAME, QuestionSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ControlConstructReference")
    public JAXBElement<ReferenceType> createControlConstructReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_ControlConstructReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MultipleQuestionItemType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "MultipleQuestionItem")
    public JAXBElement<MultipleQuestionItemType> createMultipleQuestionItem(MultipleQuestionItemType value) {
        return new JAXBElement<MultipleQuestionItemType>(_MultipleQuestionItem_QNAME, MultipleQuestionItemType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IdentifiedStructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Weighting")
    public JAXBElement<IdentifiedStructuredStringType> createWeighting(IdentifiedStructuredStringType value) {
        return new JAXBElement<IdentifiedStructuredStringType>(_Weighting_QNAME, IdentifiedStructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Method")
    public JAXBElement<CodeValueType> createMethod(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_Method_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InterviewerInstructionSchemeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "InterviewerInstructionScheme")
    public JAXBElement<InterviewerInstructionSchemeType> createInterviewerInstructionScheme(InterviewerInstructionSchemeType value) {
        return new JAXBElement<InterviewerInstructionSchemeType>(_InterviewerInstructionScheme_QNAME, InterviewerInstructionSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MethodologyType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Methodology")
    public JAXBElement<MethodologyType> createMethodology(MethodologyType value) {
        return new JAXBElement<MethodologyType>(_Methodology_QNAME, MethodologyType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Type")
    public JAXBElement<CodeValueType> createType(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_Type_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataAppraisalInformationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "DataAppraisalInformation")
    public JAXBElement<DataAppraisalInformationType> createDataAppraisalInformation(DataAppraisalInformationType value) {
        return new JAXBElement<DataAppraisalInformationType>(_DataAppraisalInformation_QNAME, DataAppraisalInformationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GeneralInstructionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "GeneralInstruction")
    public JAXBElement<GeneralInstructionType> createGeneralInstruction(GeneralInstructionType value) {
        return new JAXBElement<GeneralInstructionType>(_GeneralInstruction_QNAME, GeneralInstructionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StatementItemType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "StatementItem", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "ControlConstruct")
    public JAXBElement<StatementItemType> createStatementItem(StatementItemType value) {
        return new JAXBElement<StatementItemType>(_StatementItem_QNAME, StatementItemType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InstrumentType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Instrument")
    public JAXBElement<InstrumentType> createInstrument(InstrumentType value) {
        return new JAXBElement<InstrumentType>(_Instrument_QNAME, InstrumentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExternalInterviewerInstructionReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ExternalInterviewerInstructionReference")
    public JAXBElement<ExternalInterviewerInstructionReferenceType> createExternalInterviewerInstructionReference(ExternalInterviewerInstructionReferenceType value) {
        return new JAXBElement<ExternalInterviewerInstructionReferenceType>(_ExternalInterviewerInstructionReference_QNAME, ExternalInterviewerInstructionReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DynamicTextType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "DisplayText")
    public JAXBElement<DynamicTextType> createDisplayText(DynamicTextType value) {
        return new JAXBElement<DynamicTextType>(_DisplayText_QNAME, DynamicTextType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "InstrumentName")
    public JAXBElement<NameType> createInstrumentName(NameType value) {
        return new JAXBElement<NameType>(_InstrumentName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "AgencyOrganizationReference")
    public JAXBElement<ReferenceType> createAgencyOrganizationReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_AgencyOrganizationReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GenerationInstructionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "GenerationInstruction")
    public JAXBElement<GenerationInstructionType> createGenerationInstruction(GenerationInstructionType value) {
        return new JAXBElement<GenerationInstructionType>(_GenerationInstruction_QNAME, GenerationInstructionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CommandType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "AlternateSequenceType")
    public JAXBElement<CommandType> createAlternateSequenceType(CommandType value) {
        return new JAXBElement<CommandType>(_AlternateSequenceType_QNAME, CommandType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IfThenElseType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "IfThenElse", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "ControlConstruct")
    public JAXBElement<IfThenElseType> createIfThenElse(IfThenElseType value) {
        return new JAXBElement<IfThenElseType>(_IfThenElse_QNAME, IfThenElseType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SchemeReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "QuestionSchemeReference")
    public JAXBElement<SchemeReferenceType> createQuestionSchemeReference(SchemeReferenceType value) {
        return new JAXBElement<SchemeReferenceType>(_QuestionSchemeReference_QNAME, SchemeReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "InstructionName")
    public JAXBElement<NameType> createInstructionName(NameType value) {
        return new JAXBElement<NameType>(_InstructionName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "WhileConstructReference")
    public JAXBElement<ReferenceType> createWhileConstructReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_WhileConstructReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CategoryDomainType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "CategoryDomain", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "ResponseDomain")
    public JAXBElement<CategoryDomainType> createCategoryDomain(CategoryDomainType value) {
        return new JAXBElement<CategoryDomainType>(_CategoryDomain_QNAME, CategoryDomainType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SchemeReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ControlConstructSchemeReference")
    public JAXBElement<SchemeReferenceType> createControlConstructSchemeReference(SchemeReferenceType value) {
        return new JAXBElement<SchemeReferenceType>(_ControlConstructSchemeReference_QNAME, SchemeReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "IndependentVariableReference")
    public JAXBElement<ReferenceType> createIndependentVariableReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_IndependentVariableReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OtherMaterialType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ExternalInformation")
    public JAXBElement<OtherMaterialType> createExternalInformation(OtherMaterialType value) {
        return new JAXBElement<OtherMaterialType>(_ExternalInformation_QNAME, OtherMaterialType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Code")
    public JAXBElement<CodeType> createCode(CodeType value) {
        return new JAXBElement<CodeType>(_Code_QNAME, CodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "StepValue")
    public JAXBElement<CodeType> createStepValue(CodeType value) {
        return new JAXBElement<CodeType>(_StepValue_QNAME, CodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InternationalStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Label")
    public JAXBElement<InternationalStringType> createLabel(InternationalStringType value) {
        return new JAXBElement<InternationalStringType>(_Label_QNAME, InternationalStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LiteralTextType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "LiteralText", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "Text")
    public JAXBElement<LiteralTextType> createLiteralText(LiteralTextType value) {
        return new JAXBElement<LiteralTextType>(_LiteralText_QNAME, LiteralTextType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IdentifiedStructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "SamplingProcedure")
    public JAXBElement<IdentifiedStructuredStringType> createSamplingProcedure(IdentifiedStructuredStringType value) {
        return new JAXBElement<IdentifiedStructuredStringType>(_SamplingProcedure_QNAME, IdentifiedStructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NumericDomainType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "NumericDomain", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "ResponseDomain")
    public JAXBElement<NumericDomainType> createNumericDomain(NumericDomainType value) {
        return new JAXBElement<NumericDomainType>(_NumericDomain_QNAME, NumericDomainType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DynamicTextType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "QuestionText")
    public JAXBElement<DynamicTextType> createQuestionText(DynamicTextType value) {
        return new JAXBElement<DynamicTextType>(_QuestionText_QNAME, DynamicTextType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "AssignedVariableReference")
    public JAXBElement<ReferenceType> createAssignedVariableReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_AssignedVariableReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DateType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "DataCollectionDate")
    public JAXBElement<DateType> createDataCollectionDate(DateType value) {
        return new JAXBElement<DateType>(_DataCollectionDate_QNAME, DateType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ThenConstructReference")
    public JAXBElement<ReferenceType> createThenConstructReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_ThenConstructReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InstructionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Instruction")
    public JAXBElement<InstructionType> createInstruction(InstructionType value) {
        return new JAXBElement<InstructionType>(_Instruction_QNAME, InstructionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OperationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ControlOperation")
    public JAXBElement<OperationType> createControlOperation(OperationType value) {
        return new JAXBElement<OperationType>(_ControlOperation_QNAME, OperationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "OtherAppraisalProcess")
    public JAXBElement<StructuredStringType> createOtherAppraisalProcess(StructuredStringType value) {
        return new JAXBElement<StructuredStringType>(_OtherAppraisalProcess_QNAME, StructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SpecificSequenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ResponseSequence")
    public JAXBElement<SpecificSequenceType> createResponseSequence(SpecificSequenceType value) {
        return new JAXBElement<SpecificSequenceType>(_ResponseSequence_QNAME, SpecificSequenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ItemSequenceTypeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ItemSequenceType", defaultValue = "InOrderOfAppearance")
    public JAXBElement<ItemSequenceTypeType> createItemSequenceType(ItemSequenceTypeType value) {
        return new JAXBElement<ItemSequenceTypeType>(_ItemSequenceType_QNAME, ItemSequenceTypeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComputationItemType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ComputationItem", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "ControlConstruct")
    public JAXBElement<ComputationItemType> createComputationItem(ComputationItemType value) {
        return new JAXBElement<ComputationItemType>(_ComputationItem_QNAME, ComputationItemType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link QuestionItemType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "QuestionItem")
    public JAXBElement<QuestionItemType> createQuestionItem(QuestionItemType value) {
        return new JAXBElement<QuestionItemType>(_QuestionItem_QNAME, QuestionItemType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InternationalStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ResponseUnit")
    public JAXBElement<InternationalStringType> createResponseUnit(InternationalStringType value) {
        return new JAXBElement<InternationalStringType>(_ResponseUnit_QNAME, InternationalStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataCollectionFrequencyType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "DataCollectionFrequency")
    public JAXBElement<DataCollectionFrequencyType> createDataCollectionFrequency(DataCollectionFrequencyType value) {
        return new JAXBElement<DataCollectionFrequencyType>(_DataCollectionFrequency_QNAME, DataCollectionFrequencyType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "WhileCondition")
    public JAXBElement<CodeType> createWhileCondition(CodeType value) {
        return new JAXBElement<CodeType>(_WhileCondition_QNAME, CodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ControlConstructSchemeName")
    public JAXBElement<NameType> createControlConstructSchemeName(NameType value) {
        return new JAXBElement<NameType>(_ControlConstructSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OperationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "CleaningOperation")
    public JAXBElement<OperationType> createCleaningOperation(OperationType value) {
        return new JAXBElement<OperationType>(_CleaningOperation_QNAME, OperationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "DataCollectorOrganizationReference")
    public JAXBElement<ReferenceType> createDataCollectorOrganizationReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_DataCollectorOrganizationReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LoopType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Loop", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "ControlConstruct")
    public JAXBElement<LoopType> createLoop(LoopType value) {
        return new JAXBElement<LoopType>(_Loop_QNAME, LoopType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ConstructName")
    public JAXBElement<NameType> createConstructName(NameType value) {
        return new JAXBElement<NameType>(_ConstructName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SchemeReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "InterviewerInstructionSchemeReference")
    public JAXBElement<SchemeReferenceType> createInterviewerInstructionSchemeReference(SchemeReferenceType value) {
        return new JAXBElement<SchemeReferenceType>(_InterviewerInstructionSchemeReference_QNAME, SchemeReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SpecificSequenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ConstructSequence")
    public JAXBElement<SpecificSequenceType> createConstructSequence(SpecificSequenceType value) {
        return new JAXBElement<SpecificSequenceType>(_ConstructSequence_QNAME, SpecificSequenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SpecificSequenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "SubQuestionSequence")
    public JAXBElement<SpecificSequenceType> createSubQuestionSequence(SpecificSequenceType value) {
        return new JAXBElement<SpecificSequenceType>(_SubQuestionSequence_QNAME, SpecificSequenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "VariableSetReference")
    public JAXBElement<ReferenceType> createVariableSetReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_VariableSetReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OriginType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Origin")
    public JAXBElement<OriginType> createOrigin(OriginType value) {
        return new JAXBElement<OriginType>(_Origin_QNAME, OriginType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "SourceVariableReference")
    public JAXBElement<ReferenceType> createSourceVariableReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_SourceVariableReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataCollectionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "DataCollection")
    public JAXBElement<DataCollectionType> createDataCollection(DataCollectionType value) {
        return new JAXBElement<DataCollectionType>(_DataCollection_QNAME, DataCollectionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodingType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Coding")
    public JAXBElement<CodingType> createCoding(CodingType value) {
        return new JAXBElement<CodingType>(_Coding_QNAME, CodingType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InterviewerInstructionReferenceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "InterviewerInstructionReference")
    public JAXBElement<InterviewerInstructionReferenceType> createInterviewerInstructionReference(InterviewerInstructionReferenceType value) {
        return new JAXBElement<InterviewerInstructionReferenceType>(_InterviewerInstructionReference_QNAME, InterviewerInstructionReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataSourceType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "DataSource")
    public JAXBElement<DataSourceType> createDataSource(DataSourceType value) {
        return new JAXBElement<DataSourceType>(_DataSource_QNAME, DataSourceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "QuestionIntent")
    public JAXBElement<StructuredStringType> createQuestionIntent(StructuredStringType value) {
        return new JAXBElement<StructuredStringType>(_QuestionIntent_QNAME, StructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link QuestionConstructType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "QuestionConstruct", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "ControlConstruct")
    public JAXBElement<QuestionConstructType> createQuestionConstruct(QuestionConstructType value) {
        return new JAXBElement<QuestionConstructType>(_QuestionConstruct_QNAME, QuestionConstructType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "QuestionItemName")
    public JAXBElement<NameType> createQuestionItemName(NameType value) {
        return new JAXBElement<NameType>(_QuestionItemName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TextType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "Text")
    public JAXBElement<TextType> createText(TextType value) {
        return new JAXBElement<TextType>(_Text_QNAME, TextType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CollectionEventType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "CollectionEvent")
    public JAXBElement<CollectionEventType> createCollectionEvent(CollectionEventType value) {
        return new JAXBElement<CollectionEventType>(_CollectionEvent_QNAME, CollectionEventType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "SourceType")
    public JAXBElement<CodeValueType> createSourceType(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_SourceType_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "SourceDescription")
    public JAXBElement<StructuredStringType> createSourceDescription(StructuredStringType value) {
        return new JAXBElement<StructuredStringType>(_SourceDescription_QNAME, StructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GeographicDomainType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "GeographicDomain", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "ResponseDomain")
    public JAXBElement<GeographicDomainType> createGeographicDomain(GeographicDomainType value) {
        return new JAXBElement<GeographicDomainType>(_GeographicDomain_QNAME, GeographicDomainType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IdentifiedStructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "ModeOfCollection")
    public JAXBElement<IdentifiedStructuredStringType> createModeOfCollection(IdentifiedStructuredStringType value) {
        return new JAXBElement<IdentifiedStructuredStringType>(_ModeOfCollection_QNAME, IdentifiedStructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IdentifiedStructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "TimeMethod")
    public JAXBElement<IdentifiedStructuredStringType> createTimeMethod(IdentifiedStructuredStringType value) {
        return new JAXBElement<IdentifiedStructuredStringType>(_TimeMethod_QNAME, IdentifiedStructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuredStringType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "SamplingError")
    public JAXBElement<StructuredStringType> createSamplingError(StructuredStringType value) {
        return new JAXBElement<StructuredStringType>(_SamplingError_QNAME, StructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeDomainType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "CodeDomain", substitutionHeadNamespace = "ddi:datacollection:3_1", substitutionHeadName = "ResponseDomain")
    public JAXBElement<CodeDomainType> createCodeDomain(CodeDomainType value) {
        return new JAXBElement<CodeDomainType>(_CodeDomain_QNAME, CodeDomainType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "ddi:datacollection:3_1", name = "InitialValue")
    public JAXBElement<CodeType> createInitialValue(CodeType value) {
        return new JAXBElement<CodeType>(_InitialValue_QNAME, CodeType.class, null, value);
    }

}
