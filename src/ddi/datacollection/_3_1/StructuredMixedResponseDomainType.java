//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.datacollection._3_1;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlType;
import ddi.reusable._3_1.RepresentationType;
import ddi.reusable._3_1.TextDomainType;


/**
 * ResponseDomains should be chosen that do NOT duplicate responses such as CodeSchemes with overlapping codes. Be aware that certain instruments may collect responses in such a way that confusion between a code response and text response may be possible. The process of resolving such conflicts should be addressed in the data processing instructions. There is an assumption that if a text or numeric response duplicates a coded response to a question, that the value is that of the coded category. At least one ResponseDomain must be provided.
 * 
 * <p>Java class for StructuredMixedResponseDomainType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="StructuredMixedResponseDomainType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded" minOccurs="2">
 *         &lt;element ref="{ddi:datacollection:3_1}ResponseText"/>
 *         &lt;element ref="{ddi:datacollection:3_1}ResponseDomain"/>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "StructuredMixedResponseDomainType", propOrder = {
    "responseTextOrResponseDomain"
})
public class StructuredMixedResponseDomainType {

    @XmlElementRefs({
        @XmlElementRef(name = "ResponseDomain", namespace = "ddi:datacollection:3_1", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "ResponseText", namespace = "ddi:datacollection:3_1", type = JAXBElement.class, required = false)
    })
    protected List<JAXBElement<?>> responseTextOrResponseDomain;

    /**
     * Gets the value of the responseTextOrResponseDomain property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the responseTextOrResponseDomain property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getResponseTextOrResponseDomain().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link RepresentationType }{@code >}
     * {@link JAXBElement }{@code <}{@link CodeDomainType }{@code >}
     * {@link JAXBElement }{@code <}{@link DynamicTextType }{@code >}
     * {@link JAXBElement }{@code <}{@link NumericDomainType }{@code >}
     * {@link JAXBElement }{@code <}{@link DateTimeDomainType }{@code >}
     * {@link JAXBElement }{@code <}{@link CategoryDomainType }{@code >}
     * {@link JAXBElement }{@code <}{@link TextDomainType }{@code >}
     * {@link JAXBElement }{@code <}{@link GeographicDomainType }{@code >}
     * 
     * 
     */
    public List<JAXBElement<?>> getResponseTextOrResponseDomain() {
        if (responseTextOrResponseDomain == null) {
            responseTextOrResponseDomain = new ArrayList<JAXBElement<?>>();
        }
        return this.responseTextOrResponseDomain;
    }

}
