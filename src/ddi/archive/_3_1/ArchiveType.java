//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.archive._3_1;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import ddi.reusable._3_1.LabelType;
import ddi.reusable._3_1.LifecycleInformationType;
import ddi.reusable._3_1.MaintainableType;
import ddi.reusable._3_1.NameType;
import ddi.reusable._3_1.NoteType;
import ddi.reusable._3_1.OtherMaterialType;
import ddi.reusable._3_1.StructuredStringType;


/**
 * Includes documentation about the archive and its relationship to the data being described. This encompasses metadata about the archive, relevant organizations, access, funding for the archive process, and contents and lifecycle events for the data.
 * 
 * <p>Java class for ArchiveType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ArchiveType">
 *   &lt;complexContent>
 *     &lt;extension base="{ddi:reusable:3_1}MaintainableType">
 *       &lt;sequence>
 *         &lt;element ref="{ddi:archive:3_1}ArchiveModuleName" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Label" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Description" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:archive:3_1}ArchiveSpecific"/>
 *         &lt;element ref="{ddi:archive:3_1}OrganizationScheme"/>
 *         &lt;element ref="{ddi:reusable:3_1}LifecycleInformation" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}OtherMaterial" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Note" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ArchiveType", propOrder = {
    "archiveModuleName",
    "label",
    "description",
    "archiveSpecific",
    "organizationScheme",
    "lifecycleInformation",
    "otherMaterial",
    "note"
})
public class ArchiveType
    extends MaintainableType
{

    @XmlElement(name = "ArchiveModuleName")
    protected List<NameType> archiveModuleName;
    @XmlElement(name = "Label", namespace = "ddi:reusable:3_1")
    protected List<LabelType> label;
    @XmlElement(name = "Description", namespace = "ddi:reusable:3_1")
    protected List<StructuredStringType> description;
    @XmlElement(name = "ArchiveSpecific", required = true)
    protected ArchiveSpecificType archiveSpecific;
    @XmlElement(name = "OrganizationScheme", required = true)
    protected OrganizationSchemeType organizationScheme;
    @XmlElement(name = "LifecycleInformation", namespace = "ddi:reusable:3_1")
    protected LifecycleInformationType lifecycleInformation;
    @XmlElement(name = "OtherMaterial", namespace = "ddi:reusable:3_1")
    protected List<OtherMaterialType> otherMaterial;
    @XmlElement(name = "Note", namespace = "ddi:reusable:3_1")
    protected List<NoteType> note;

    /**
     * Gets the value of the archiveModuleName property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the archiveModuleName property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getArchiveModuleName().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     * 
     * 
     */
    public List<NameType> getArchiveModuleName() {
        if (archiveModuleName == null) {
            archiveModuleName = new ArrayList<NameType>();
        }
        return this.archiveModuleName;
    }

    /**
     * Gets the value of the label property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     * 
     * 
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * Gets the value of the description property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the description property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDescription().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StructuredStringType }
     * 
     * 
     */
    public List<StructuredStringType> getDescription() {
        if (description == null) {
            description = new ArrayList<StructuredStringType>();
        }
        return this.description;
    }

    /**
     * Contains metadata specific to a particular archive's holding.
     * 
     * @return
     *     possible object is
     *     {@link ArchiveSpecificType }
     *     
     */
    public ArchiveSpecificType getArchiveSpecific() {
        return archiveSpecific;
    }

    /**
     * Sets the value of the archiveSpecific property.
     * 
     * @param value
     *     allowed object is
     *     {@link ArchiveSpecificType }
     *     
     */
    public void setArchiveSpecific(ArchiveSpecificType value) {
        this.archiveSpecific = value;
    }

    /**
     * A list of the organizations related to the DDI instance. This includes information on the archives responsible for creating and maintaining the instance. All agencies must be defined as an Organization in an Archive schema (which can be defined inline or resolved externally).
     * 
     * @return
     *     possible object is
     *     {@link OrganizationSchemeType }
     *     
     */
    public OrganizationSchemeType getOrganizationScheme() {
        return organizationScheme;
    }

    /**
     * Sets the value of the organizationScheme property.
     * 
     * @param value
     *     allowed object is
     *     {@link OrganizationSchemeType }
     *     
     */
    public void setOrganizationScheme(OrganizationSchemeType value) {
        this.organizationScheme = value;
    }

    /**
     * LifecycleInformation contains the description of a set of events in the life cycle of the data. It may be extended by specific users.
     * 
     * @return
     *     possible object is
     *     {@link LifecycleInformationType }
     *     
     */
    public LifecycleInformationType getLifecycleInformation() {
        return lifecycleInformation;
    }

    /**
     * Sets the value of the lifecycleInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link LifecycleInformationType }
     *     
     */
    public void setLifecycleInformation(LifecycleInformationType value) {
        this.lifecycleInformation = value;
    }

    /**
     * Material related to this item from the archive's perspective.Gets the value of the otherMaterial property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the otherMaterial property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOtherMaterial().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OtherMaterialType }
     * 
     * 
     */
    public List<OtherMaterialType> getOtherMaterial() {
        if (otherMaterial == null) {
            otherMaterial = new ArrayList<OtherMaterialType>();
        }
        return this.otherMaterial;
    }

    /**
     * Notes on any archival information presented in this module.Gets the value of the note property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the note property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNote().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NoteType }
     * 
     * 
     */
    public List<NoteType> getNote() {
        if (note == null) {
            note = new ArrayList<NoteType>();
        }
        return this.note;
    }

}
