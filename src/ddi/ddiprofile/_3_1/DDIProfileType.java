//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.ddiprofile._3_1;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;
import ddi.reusable._3_1.LabelType;
import ddi.reusable._3_1.MaintainableType;
import ddi.reusable._3_1.NameType;
import ddi.reusable._3_1.StructuredStringType;


/**
 * <p>Java class for DDIProfileType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DDIProfileType">
 *   &lt;complexContent>
 *     &lt;extension base="{ddi:reusable:3_1}MaintainableType">
 *       &lt;sequence>
 *         &lt;element ref="{ddi:ddiprofile:3_1}DDIProfileName" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Label" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Description" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="XPathVersion" type="{http://www.w3.org/2001/XMLSchema}decimal"/>
 *         &lt;element name="DDINamespace" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="XMLPrefixMap" type="{ddi:ddiprofile:3_1}XMLPrefixMapType" maxOccurs="unbounded"/>
 *         &lt;element name="Instructions" type="{ddi:reusable:3_1}StructuredStringType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element ref="{ddi:ddiprofile:3_1}Used"/>
 *           &lt;element ref="{ddi:ddiprofile:3_1}NotUsed"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DDIProfileType", propOrder = {
    "ddiProfileName",
    "label",
    "description",
    "xPathVersion",
    "ddiNamespace",
    "xmlPrefixMap",
    "instructions",
    "usedOrNotUsed"
})
public class DDIProfileType
    extends MaintainableType
{

    @XmlElement(name = "DDIProfileName")
    protected List<NameType> ddiProfileName;
    @XmlElement(name = "Label", namespace = "ddi:reusable:3_1")
    protected List<LabelType> label;
    @XmlElement(name = "Description", namespace = "ddi:reusable:3_1")
    protected List<StructuredStringType> description;
    @XmlElement(name = "XPathVersion", required = true, defaultValue = "1.0")
    protected BigDecimal xPathVersion;
    @XmlElement(name = "DDINamespace")
    protected BigDecimal ddiNamespace;
    @XmlElement(name = "XMLPrefixMap", required = true)
    protected List<XMLPrefixMapType> xmlPrefixMap;
    @XmlElement(name = "Instructions")
    protected List<StructuredStringType> instructions;
    @XmlElements({
        @XmlElement(name = "Used", type = UsedType.class),
        @XmlElement(name = "NotUsed", type = NotUsedType.class)
    })
    protected List<Object> usedOrNotUsed;

    /**
     * Gets the value of the ddiProfileName property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ddiProfileName property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDDIProfileName().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     * 
     * 
     */
    public List<NameType> getDDIProfileName() {
        if (ddiProfileName == null) {
            ddiProfileName = new ArrayList<NameType>();
        }
        return this.ddiProfileName;
    }

    /**
     * Gets the value of the label property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     * 
     * 
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * Provides a human-readable description of the profile. XHTML may be used, and it may be supplied in several language-versions.Gets the value of the description property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the description property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDescription().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StructuredStringType }
     * 
     * 
     */
    public List<StructuredStringType> getDescription() {
        if (description == null) {
            description = new ArrayList<StructuredStringType>();
        }
        return this.description;
    }

    /**
     * Gets the value of the xPathVersion property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getXPathVersion() {
        return xPathVersion;
    }

    /**
     * Sets the value of the xPathVersion property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setXPathVersion(BigDecimal value) {
        this.xPathVersion = value;
    }

    /**
     * Gets the value of the ddiNamespace property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getDDINamespace() {
        return ddiNamespace;
    }

    /**
     * Sets the value of the ddiNamespace property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setDDINamespace(BigDecimal value) {
        this.ddiNamespace = value;
    }

    /**
     * Gets the value of the xmlPrefixMap property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the xmlPrefixMap property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getXMLPrefixMap().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link XMLPrefixMapType }
     * 
     * 
     */
    public List<XMLPrefixMapType> getXMLPrefixMap() {
        if (xmlPrefixMap == null) {
            xmlPrefixMap = new ArrayList<XMLPrefixMapType>();
        }
        return this.xmlPrefixMap;
    }

    /**
     * Gets the value of the instructions property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the instructions property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInstructions().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StructuredStringType }
     * 
     * 
     */
    public List<StructuredStringType> getInstructions() {
        if (instructions == null) {
            instructions = new ArrayList<StructuredStringType>();
        }
        return this.instructions;
    }

    /**
     * Gets the value of the usedOrNotUsed property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the usedOrNotUsed property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUsedOrNotUsed().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UsedType }
     * {@link NotUsedType }
     * 
     * 
     */
    public List<Object> getUsedOrNotUsed() {
        if (usedOrNotUsed == null) {
            usedOrNotUsed = new ArrayList<Object>();
        }
        return this.usedOrNotUsed;
    }

}
