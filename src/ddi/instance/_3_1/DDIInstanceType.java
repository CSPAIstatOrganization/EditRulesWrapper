//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.08.22 at 02:00:24 PM CEST 
//


package ddi.instance._3_1;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import ddi.group._3_1.GroupType;
import ddi.group._3_1.LocalHoldingPackageType;
import ddi.group._3_1.ResourcePackageType;
import ddi.reusable._3_1.CitationType;
import ddi.reusable._3_1.CoverageType;
import ddi.reusable._3_1.MaintainableType;
import ddi.reusable._3_1.NoteType;
import ddi.reusable._3_1.OtherMaterialType;
import ddi.studyunit._3_1.StudyUnitType;


/**
 * DDIInstance is  the top-level wrapper for any DDI document. It may contain a set of top-level elements, which generally correspond to the modular breakdown within DDI. (Note that some modules are sub-components of other, higher-level modules). Every DDI Instance will use this wrapper, regardless of its contents.
 * 
 * <p>Java class for DDIInstanceType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DDIInstanceType">
 *   &lt;complexContent>
 *     &lt;extension base="{ddi:reusable:3_1}MaintainableType">
 *       &lt;sequence>
 *         &lt;element ref="{ddi:reusable:3_1}Citation" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Coverage" minOccurs="0"/>
 *         &lt;element ref="{ddi:group:3_1}Group" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:group:3_1}ResourcePackage" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:group:3_1}LocalHoldingPackage" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:studyunit:3_1}StudyUnit" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}OtherMaterial" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:reusable:3_1}Note" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{ddi:instance:3_1}TranslationInformation" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DDIInstanceType", propOrder = {
    "citation",
    "coverage",
    "group",
    "resourcePackage",
    "localHoldingPackage",
    "studyUnit",
    "otherMaterial",
    "note",
    "translationInformation"
})
public class DDIInstanceType
    extends MaintainableType
{

    @XmlElement(name = "Citation", namespace = "ddi:reusable:3_1")
    protected CitationType citation;
    @XmlElement(name = "Coverage", namespace = "ddi:reusable:3_1")
    protected CoverageType coverage;
    @XmlElement(name = "Group", namespace = "ddi:group:3_1")
    protected List<GroupType> group;
    @XmlElement(name = "ResourcePackage", namespace = "ddi:group:3_1")
    protected List<ResourcePackageType> resourcePackage;
    @XmlElement(name = "LocalHoldingPackage", namespace = "ddi:group:3_1")
    protected List<LocalHoldingPackageType> localHoldingPackage;
    @XmlElement(name = "StudyUnit", namespace = "ddi:studyunit:3_1")
    protected List<StudyUnitType> studyUnit;
    @XmlElement(name = "OtherMaterial", namespace = "ddi:reusable:3_1")
    protected List<OtherMaterialType> otherMaterial;
    @XmlElement(name = "Note", namespace = "ddi:reusable:3_1")
    protected List<NoteType> note;
    @XmlElement(name = "TranslationInformation")
    protected TranslationType translationInformation;

    /**
     * Citation for the Instance. Note that the citation is optional, because the DDI Instance may contain only reusable component pieces of metadata sets, which are not directly concerned with a single study or studies.
     * 
     * @return
     *     possible object is
     *     {@link CitationType }
     *     
     */
    public CitationType getCitation() {
        return citation;
    }

    /**
     * Sets the value of the citation property.
     * 
     * @param value
     *     allowed object is
     *     {@link CitationType }
     *     
     */
    public void setCitation(CitationType value) {
        this.citation = value;
    }

    /**
     * This element contains descriptions of temporal, geographic and topical coverage. At the instance level these descriptions should be inclusive of the coverage of all modules in the instance. The element is available within individual modules and can be used to refine the coverage to that of the individual module.
     * 
     * @return
     *     possible object is
     *     {@link CoverageType }
     *     
     */
    public CoverageType getCoverage() {
        return coverage;
    }

    /**
     * Sets the value of the coverage property.
     * 
     * @param value
     *     allowed object is
     *     {@link CoverageType }
     *     
     */
    public void setCoverage(CoverageType value) {
        this.coverage = value;
    }

    /**
     * Group is a framework for documenting related studies or groups of studies.Gets the value of the group property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the group property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGroup().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link GroupType }
     * 
     * 
     */
    public List<GroupType> getGroup() {
        if (group == null) {
            group = new ArrayList<GroupType>();
        }
        return this.group;
    }

    /**
     * Resource is a type of Group which contains metadata intended for inclusion by reference in other Groups, SubGroups, and StudyUnits, but does not itself directly describe studies. Resource contains information intended for reuse.Gets the value of the resourcePackage property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the resourcePackage property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getResourcePackage().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ResourcePackageType }
     * 
     * 
     */
    public List<ResourcePackageType> getResourcePackage() {
        if (resourcePackage == null) {
            resourcePackage = new ArrayList<ResourcePackageType>();
        }
        return this.resourcePackage;
    }

    /**
     * LocalHoldingPackages are used to contain metadata added at a local level, without causing a versioning of the original metadata. This facilitates the addition of lifecycle events and similar non-intrusive additions on the part of an archive.Gets the value of the localHoldingPackage property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the localHoldingPackage property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLocalHoldingPackage().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LocalHoldingPackageType }
     * 
     * 
     */
    public List<LocalHoldingPackageType> getLocalHoldingPackage() {
        if (localHoldingPackage == null) {
            localHoldingPackage = new ArrayList<LocalHoldingPackageType>();
        }
        return this.localHoldingPackage;
    }

    /**
     * A StudyUnit corresponds to the documentation for a single, "simple" study. (In the 2.* version of DDI, this was the scope of a single DDI instance.) Gets the value of the studyUnit property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the studyUnit property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getStudyUnit().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StudyUnitType }
     * 
     * 
     */
    public List<StudyUnitType> getStudyUnit() {
        if (studyUnit == null) {
            studyUnit = new ArrayList<StudyUnitType>();
        }
        return this.studyUnit;
    }

    /**
     * OtherMaterials element includes citations to materials related to the content of the DDI Instance. This includes citations to such material, an external reference to a URL (or other URI), and a statement about the relationship between the cited OtherMaterial the contents of the DDI instance.Gets the value of the otherMaterial property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the otherMaterial property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOtherMaterial().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OtherMaterialType }
     * 
     * 
     */
    public List<OtherMaterialType> getOtherMaterial() {
        if (otherMaterial == null) {
            otherMaterial = new ArrayList<OtherMaterialType>();
        }
        return this.otherMaterial;
    }

    /**
     * The Note element is used to include notes which are relevant to the contents of the entire DDI Instance. A note type may be specified using a controlled vocabulary.Gets the value of the note property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the note property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNote().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NoteType }
     * 
     * 
     */
    public List<NoteType> getNote() {
        if (note == null) {
            note = new ArrayList<NoteType>();
        }
        return this.note;
    }

    /**
     * TranslationInformation contains information about the translation of the content of the DDI Instance. This includes human-readable information about which language(s) are involved in the translation.
     * 
     * @return
     *     possible object is
     *     {@link TranslationType }
     *     
     */
    public TranslationType getTranslationInformation() {
        return translationInformation;
    }

    /**
     * Sets the value of the translationInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link TranslationType }
     *     
     */
    public void setTranslationInformation(TranslationType value) {
        this.translationInformation = value;
    }

}
